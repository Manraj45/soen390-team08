{"version":3,"sources":["redux/actions/AccountActions/accountAction.ts","core/services/LocalStorageService.ts","core/utils/config.ts","redux/types/AccountTypes/accountTypes.ts","assets/images/login_bike_logo.png","pages/Login/LoginStyle.ts","pages/Login/Login.tsx","pages/Registration/RegistrationStyle.ts","pages/Registration/Registration.tsx","components/Triggers/TriggersStyles.ts","components/Triggers/Triggers.tsx","components/RecentPurchases/RecentPayableTransactionsStyles.ts","components/RecentPurchases/RecentPayableTransactions.tsx","components/RecentPurchases/RecentReceivableTransactionsStyles.ts","components/RecentPurchases/RecentReceivableTransactions.tsx","pages/Home/HomeStyles.ts","pages/Home/Home.tsx","components/Menu/Header/HeaderStyles.ts","components/Menu/Header/Header.tsx","components/Menu/SideBarMenu/SideBarMenuStyle.ts","components/Menu/SideBarMenu/SideBarMenu.tsx","components/IdleTimerContainer/IdleTimerContainerStyle.ts","components/IdleTimerContainer/IdleTimerContainer.tsx","components/PermissionManagement/PermissionDropdown.tsx","components/PermissionManagement/UserAccountsTableStyle.ts","components/PermissionManagement/UserAccountsTable.tsx","pages/PermissionManagement/PermissionManagementStyle.ts","pages/PermissionManagement/PermissionManagement.tsx","pages/Inventory/InventoryStyles.ts","pages/Inventory/Inventory.tsx","pages/OrderComponent/OrderComponentStyle.ts","redux/types/OrderListTypes/orderListTypes.ts","redux/actions/OrderListActions/orderListAction.ts","components/OrderSummary/OrderSummaryStyle.ts","components/OrderSummary/OrderSummary.tsx","pages/OrderComponent/OrderComponent.tsx","pages/UserLogs/UserLogsStyles.ts","pages/UserLogs/UserLogs.tsx","pages/PaymentHistory/PayableHistoryStyle.ts","components/DataExport/DataExportStyle.ts","components/DataExport/DataExport.tsx","pages/PaymentHistory/PayableHistory.tsx","pages/PaymentHistory/ReceivableHistoryStyle.ts","pages/PaymentHistory/ReceivableHistory.tsx","pages/OrderBike/OrderBikeStyle.ts","components/ColorBox/ColorBox.tsx","redux/types/OrderBikeTypes/orderBikeTypes.ts","components/BikeOrderSummary/BikeOrderSummaryStyle.ts","components/BikeOrderSummary/BikeOrderSummary.tsx","redux/actions/OrderBikeActions/orderBikeActions.ts","pages/OrderBike/OrderBike.tsx","pages/CustomComponent/CustomComponentStyle.ts","pages/CustomComponent/CustomComponent.tsx","app/App.tsx","core/utils/theme.ts","redux/reducers/AccountReducers/accountReducer.ts","redux/reducers/OrderListReducers/orderListReducer.ts","redux/reducers/OrderBikeReducer/orderBikeReducer.ts","redux/rootReducer.ts","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["Role","localStorageService","setToken","token","localStorage","setItem","getAccessToken","getItem","getRefreshToken","clearAllTokens","removeItem","setBearerToken","axios","defaults","headers","common","BACKEND_URL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","IS_AUTHENTICATED_SUCCESS","IS_AUTHENTICATED_FAILURE","LOGOUT","url","loginRequest","type","login","credential","dispatch","post","then","response","account","data","authenticated","payload","catch","error","errorMsg","loginFailure","isAuthenticated","get","status","logout","delete","Authorization","useStyles","makeStyles","theme","logo","width","loginPageWrapper","breakpoints","down","margin","position","top","up","textfield","height","marginBottom","grid","marginTop","button","register","color","connect","state","props","classes","id","Grid","className","container","spacing","direction","item","xs","md","Typography","variant","src","bike_logo","alt","autoComplete","onSubmit","event","preventDefault","email","currentTarget","value","password","TextField","name","label","Button","to","style","textDecoration","registrationPageWrapper","recoveryQuestion","recoveryLabel","marginLeft","firstName","marginRight","lastName","RegistrationPage","styles","useState","recoveryQuestions","setRecoveryQuestions","question1","setQuestion1","question2","setQuestion2","registrationErrorMessage","setRegistrationErrorMessage","history","useHistory","useEffect","console","log","handleRegistration","a","registrationData","organization","role","recovery_question1","recovery_question2","recovery_question1_answer","answer1","recovery_question2_answer","answer2","registrationEmail","push","message","FormControl","InputLabel","Select","labelId","onChange","target","Object","values","map","question","MenuItem","trigger","background","maxWidth","triggers","setTriggers","Axios","loading","handleChange","triggerType","put","Fragment","textTransform","FormGroup","FormControlLabel","control","Switch","checked","Boolean","ROLE_CHANGE","labelPlacement","COMPONENT_ORDER","BIKE_ORDER","recentPayableTransactions","headerCell","paddingTop","seeMore","backgroundColor","backend","accountPayables","setAccountPayables","Card","CardContent","paddingBottom","Table","TableHead","TableRow","TableCell","TableBody","keys","length","order","account_payable_id","payable_date","substring","total","toFixed","slice","CardActions","href","size","recentReceivableTransactions","accountReceivables","setAccountReceivables","account_receivable_id","home","content","display","flexWrap","justifyContent","navbar","zIndex","left","menuIcon","paddingLeft","navbar_Navigation","alignItems","exitLogo","paddingRight","userName","logoutId","right","setMenuIsOpen","menuIsOpen","menuToggleClickHandler","Box","onClick","drawer","boxShadow","menuItems","listStyleType","flexDirection","fontSize","List","ListItem","modal","border","padding","outline","minHeight","text","textAlign","icon","idleTimerRef","useRef","sessionTimeoutRef","sessionTimeIntervalRef","timeoutPeriod","timeoutDisplay","settimeoutDisplay","modalOpen","setModalOpen","setInactive","clearTimeout","current","clearInterval","body","ref","timeout","onIdle","setTimeout","setInterval","Modal","open","aria-labelledby","aria-describedby","createStyles","selectEmpty","PermissionDropdown","permission","setPermission","displayEmpty","tableHeader","borderBottom","dropdown","saveBtn","saveBtnContainer","float","UserAccountsTable","setData","Map","initialState","res","accounts","forEach","set","err","stickyHeader","title","index","toUpperCase","key","account_id","first_name","last_name","row","table","document","getElementById","i","col","userEmail","j","cells","innerText","userPermission","patch","alert","rows","setDialogOpen","startIcon","adminPageWrapper","fontWeight","place","maxHeight","overflow","dialogOpen","handleDialogClose","justify","wrap","Paper","Dialog","onClose","DialogTitle","DialogActions","tableHead","tableStyle","innerTable","topRow","minWidth","Inventory","inventoryTable","setInventoryTable","sortOrder","setSortOrder","arrowUp","setArrowUp","createMuiTheme","overrides","MuiTableSortLabel","opacity","sortTable","sortBy","sortBy2","sortedTable","sortDirection","newSortDirection","newArrowDirection","sort","b","x","y","sortByObject","component_type","price","quantity","component_status","specificComponentType","location_name","ThemeProvider","TableSortLabel","component_id","gridList","placeItems","componentName","addCart","ADD_ITEM","REMOVE_ITEM","REMOVE_ALL_ITEMS","UPDATE_QUANTITY","changeQuantity","orderList","newQuantitySelected","findIndex","component","selectedQuantity","updateQuantity","deleteItemFromCart","splice","billingContainer","itemRow","header","headerRow","componentId","removeAllItems","newQuantity","setTotal","clearCart","cartTotal","ItemRow","info","Number","addItem","URL","selectSize","setSelectSize","location","setLocation","selected","setSelected","handleChangeSelected","locationList","setLocationList","undefined","componentList","setComponentList","snackOpen","setSnackOpen","snackMessage","setSnackMessage","handleClose","params","StyledToggleButtonGroup","withStyles","grouped","borderRadius","shape","ToggleButtonGroup","ComponentRow","componentType","GridList","exclusive","e","ToggleButton","GridListTile","defaultValue","FRAME","SEAT","HANDLE","WHEEL","DRIVE_TRAIN","retrievedComponent","every","selectedId","checkForDuplicateItem","parseInt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","AlertTitle","UserLogs","logTable","setlogTable","timestamp","activity","log_id","payableHistory","userDetails","dataContainer","orderCell","borderWidth","borderColor","borderStyle","export","maxWeidth","paper","shadows","date","close","dateBox","errorMessage","confirmationButton","confirmationModal","palette","confirmButton","myData","myDataTitle","return","csv","reportType","img","Image","setOpen","openConfirmation","setOpenConfirmation","startDate","setStartDate","endDate","setEndDate","datesAreSelected","setDatesAreSelected","noneSensDate","setNoneSenseDate","exportMyDataOnly","setExportMyDataOnly","noData","setNoData","reportHeader","setReportHeader","getdata","formatStartDate","convertDate","formatEndDate","myDataOnly","calculateTotalExpense","totalQuantity","totalPrice","cost","quantity_bought","expensesHeaders","calculateTotalSales","bike_id","salesHeaders","downloadReport","handleCloseConfirmation","element","parts","toString","split","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","generateReport","dateFormat","exportConfirmation","filename","doc","jsPDF","pdfTable","component_price","addImage","bike_description","grade","autotable","head","save","createPDF","accountSpecifics","setAccountSpecifics","colSpan","transaction_id","receivableHistory","ColorBox","ADD_BIKE","REMOVE_BIKE","REMOVE_ALL_BIKES","ADD_COMPONENT","REMOVE_COMPONENT","REMOVE_ALL_COMPONENTS","bikeOrderList","componentOrderList","removeBike","bikeSold","removeAllBikes","removeComponentSold","removeAllComponents","bike","drive_train_id","frame_id","handle_id","seat_id","wheel_id","description","componentSaleList","addBike","addComponentSold","componentUpdated","frame","setFrame","saddle","setSaddle","handle","setHandle","wheel","setWheel","driveTrain","setDriveTrain","setColor","finish","setFinish","setGrade","bikeQuantity","setQuantity","getComponentType","handleAddToCart","temp","pass","saddle_id","handleSetComponent","InputLabelProps","shrink","InputProps","inputProps","min","pattern","Math","round","form","drop","btn","customComponentErrorMessage","setCustomComponentErrorMessage","inputs","setInputs","handleInput","customComponentData","placeholder","disabled","isFormValid","interceptors","use","Promise","reject","request","config","exact","path","render","Login","Registration","primary","main","secondary","reducer","action","filter","comp","rootReducer","combineReducers","accountReducer","orderListReducer","orderBikeReducer","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.98fee2ea.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport localStorageService from \"../../../core/services/LocalStorageService\";\r\nimport { AUTH_URL } from \"../../../core/utils/config\";\r\n\r\nimport {\r\n  IS_AUTHENTICATED_FAILURE,\r\n  IS_AUTHENTICATED_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"../../types/AccountTypes/accountTypes\";\r\n\r\n// Redux action for Account. Handles the dispatch phase of redux\r\nconst url = AUTH_URL;\r\n\r\nexport const loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (account: Account) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    authenticated: true,\r\n    payload: account\r\n  };\r\n};\r\n\r\nexport const loginFailure = (error: any) => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: error,\r\n    authenticated: false,\r\n  };\r\n};\r\n\r\nexport const logoutSuccess = () => {\r\n  return {\r\n    type: LOGOUT,\r\n    authenticated: false,\r\n  };\r\n};\r\n\r\nexport const isAuthenticatedSuccess = (account: Account) => {\r\n  return {\r\n    type: IS_AUTHENTICATED_SUCCESS,\r\n    authenticated: true,\r\n    payload: account\r\n  };\r\n};\r\n\r\nexport const isAuthenticatedFailure = () => {\r\n  return {\r\n    type: IS_AUTHENTICATED_FAILURE,\r\n    authenticated: false,\r\n  };\r\n};\r\n\r\nexport interface credential {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport enum Role {\r\n  ADMIN,\r\n  MANAGER,\r\n  EMPLOYEE,\r\n  CUSTOMER,\r\n}\r\n\r\nexport interface Account {\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  role: Role\r\n}\r\n\r\nexport const login = (credential: credential) => {\r\n  return (dispatch: any) => {\r\n    dispatch(loginRequest);\r\n    axios\r\n      .post(`${url}/auth/login`, credential)\r\n      .then((response) => {\r\n        localStorageService.setToken(response.data);\r\n        localStorageService.setBearerToken();\r\n        dispatch(loginSuccess(response.data.account));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.response.data;\r\n        dispatch(loginFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return (dispatch: any) => {\r\n    dispatch(loginRequest);\r\n    axios\r\n      .get(`${url}/auth/token/validation`)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch(isAuthenticatedSuccess(response.data));\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(isAuthenticatedFailure());\r\n      });\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch: any) => {\r\n    axios.delete(`${url}/auth/logout`).then(() => {\r\n      localStorageService.clearAllTokens();\r\n      delete axios.defaults.headers.common.Authorization;\r\n      dispatch(logoutSuccess());\r\n    });\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\n// LocalStorage service for handling storing, removing or fetching accesstoken\r\nconst localStorageService = (() => {\r\n  return {\r\n    setToken: (token: any) => {\r\n      localStorage.setItem(\"access_token\", token[\"accessToken\"]);\r\n      localStorage.setItem(\"refresh_token\", token[\"refreshToken\"]);\r\n    },\r\n    getAccessToken: () => {\r\n      return localStorage.getItem(\"access_token\");\r\n    },\r\n    getRefreshToken: () => {\r\n      return localStorage.getItem(\"refresh_token\");\r\n    },\r\n    clearAllTokens: () => {\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"refresh_token\");\r\n    },\r\n    setBearerToken: () => {\r\n      axios.defaults.headers.common[\"Authorization\"] =\r\n        \"Bearer \" + localStorage.getItem(\"access_token\");\r\n    },\r\n  };\r\n})();\r\n\r\nexport default localStorageService;\r\n","export const BACKEND_URL = `https:\\\\\\\\bikeking-backend.herokuapp.com`;\r\nexport const AUTH_URL = `https:\\\\\\\\bikeking-auth.herokuapp.com`;\r\n","export const FETCH_ACCOUNT_REQUEST: string = \"FETCH_ACCOUNT_REQUEST\";\r\nexport const FETCH_ACCOUNT_SUCCESS: string = \"FETCH_USER_REQUEST\";\r\nexport const FETCH_ACCOUNT_FAILURE: string = \"FETCH_USER_FAILURE\";\r\n\r\nexport const LOGIN_REQUEST: string = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS: string = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE: string = \"LOGIN_FAILURE\";\r\n\r\nexport const REGISTER_REQUEST: string = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS: string = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILURE: string = \"REGISTER_FAILURE\";\r\n\r\nexport const IS_AUTHENTICATED_SUCCESS: string = \"IS_AUTHENTICATED_SUCCESS\";\r\nexport const IS_AUTHENTICATED_FAILURE: string = \"IS_AUTHENTICATED\";\r\n\r\nexport const LOGOUT: string = \"LOGOUT\";\r\n","export default __webpack_public_path__ + \"static/media/login_bike_logo.ccab7240.png\";","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: \"100%\",\r\n  },\r\n  loginPageWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"0\",\r\n      position: \"absolute\",\r\n      top: \"10%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"0\",\r\n      position: \"absolute\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  textfield: {\r\n    width: \"80%\",\r\n    height: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  grid: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n    },\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n    marginTop: \"10px\",\r\n  },\r\n  login: {\r\n    marginTop: \"10%\",\r\n  },\r\n  register: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"20px\",\r\n      marginBottom: \"30px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"20%\",\r\n    },\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// SERVICES\r\nimport bike_logo from \"../../assets/images/login_bike_logo.png\";\r\nimport { credential, login } from \"../../redux/actions/AccountActions/accountAction\";\r\n\r\n// STYLING\r\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./LoginStyle\";\r\n\r\n/*\r\n  The login page.\r\n  This is where the user logs into their account.\r\n*/\r\nconst LoginPage = (props: any) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const email: string = event.currentTarget.email.value;\r\n    const password: string = event.currentTarget.password.value;\r\n    // Calling the login reducer\r\n    props.login({ email: email, password: password });\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginPage\">\r\n      <Grid\r\n        className={classes.loginPageWrapper}\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n      >\r\n        <Grid item xs={12} md={4} className={classes.grid}>\r\n          <Typography variant=\"h3\">Badob Inc</Typography>\r\n          <img src={bike_logo} alt=\"bike_logo\" className={classes.logo}></img>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} className={classes.grid}>\r\n          <div className={classes.login}>\r\n            <Typography variant=\"h5\">Already Have An Account</Typography>\r\n            {\r\n              props.account.error\r\n              && <Typography className={classes.error}>\r\n                  Incorrect Email or Password\r\n                </Typography>\r\n            }\r\n            <form autoComplete=\"off\" onSubmit={handleLogin}>\r\n              <TextField name=\"email\" label=\"Email\" className={classes.textfield}/>\r\n              <br />\r\n              <TextField type=\"password\" name=\"password\" label=\"Password\" className={classes.textfield}/>\r\n              <br />\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                Login\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} className={classes.grid}>\r\n          <div className={classes.register}>\r\n            <Typography variant=\"h5\">Don't have an account?</Typography>\r\n            <Link to=\"/register\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                Register\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    login: (credential: credential) => dispatch(login(credential)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: \"90%\",\r\n  },\r\n  grid: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n    },\r\n  },\r\n  registrationPageWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"0\",\r\n      position: \"absolute\",\r\n      top: \"10%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"0\",\r\n      position: \"absolute\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  textfield: {\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  recoveryQuestion: {\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  recoveryLabel: {\r\n    width: \"20%\",\r\n    marginLeft: \"155px\",\r\n  },\r\n  firstName: {\r\n    width: \"29%\",\r\n    marginRight: \"5px\",\r\n  },\r\n  lastName: {\r\n    width: \"30%\",\r\n    marginRight: \"5px\",\r\n  },\r\n  button: {\r\n    width: \"60%\",\r\n    marginTop: \"10px\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// ASSETS\r\nimport bike_logo from \"../../assets/images/login_bike_logo.png\";\r\n\r\n// STYLING\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./RegistrationStyle\";\r\n\r\n/*\r\n  The registration page.\r\n  This is where the user creates their account.\r\n*/\r\ninterface RegistrationData {\r\n  email: string;\r\n  organization: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  role: string;\r\n  recovery_question1: string;\r\n  recovery_question2: string;\r\n  recovery_question1_answer: string;\r\n  recovery_question2_answer: string;\r\n}\r\n\r\nconst RegistrationPage = () => {\r\n  const styles = useStyles();\r\n  const url = BACKEND_URL;\r\n\r\n  const [recoveryQuestions, setRecoveryQuestions] = useState({});\r\n  const [question1, setQuestion1] = useState(\"\");\r\n  const [question2, setQuestion2] = useState(\"\");\r\n\r\n  const [registrationErrorMessage, setRegistrationErrorMessage] = useState(\"\");\r\n\r\n  // Hook for redirecting\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${url}/register/recoveryQuestion`)\r\n      .then((response) => {\r\n        setRecoveryQuestions(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  }, [url]);\r\n\r\n  // Handle typing of question 1\r\n  const handleQuestion1 = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setQuestion1(event.target.value as string);\r\n  };\r\n\r\n  // Handle typing of question 2\r\n  const handleQuestion2 = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setQuestion2(event.target.value as string);\r\n  };\r\n\r\n  const handleRegistration = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const registrationData: RegistrationData = {\r\n      email: event.currentTarget.email.value,\r\n      organization: event.currentTarget.organization.value,\r\n      password: event.currentTarget.password.value,\r\n      firstName: event.currentTarget.firstName.value,\r\n      lastName: event.currentTarget.lastName.value,\r\n      role: \"ADMIN\",\r\n      recovery_question1: question1,\r\n      recovery_question2: question2,\r\n      recovery_question1_answer: event.currentTarget.answer1.value,\r\n      recovery_question2_answer: event.currentTarget.answer2.value,\r\n    };\r\n\r\n    // Used to add email into user_triggers table upon registration\r\n    const registrationEmail = {\r\n      email: event.currentTarget.email.value,\r\n    };\r\n\r\n    await axios\r\n      .post(`${url}/register/submission`, registrationData)\r\n      .then((response) => {\r\n        history.push(\"/login\");\r\n      })\r\n      .catch((error) => {\r\n        setRegistrationErrorMessage(error.response.data.message);\r\n      });\r\n\r\n    axios.post(`${url}/triggers/add`, registrationEmail)\r\n  };\r\n\r\n  return (\r\n    <div id=\"registrationPage\">\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        className={styles.registrationPageWrapper}\r\n      >\r\n        <Grid item xs={12} md={7} className={styles.grid}>\r\n          <form autoComplete=\"off\" onSubmit={handleRegistration}>\r\n            <TextField\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              className={styles.textfield}\r\n            />\r\n            <br />\r\n            <TextField\r\n              name=\"organization\"\r\n              label=\"Organization\"\r\n              className={styles.textfield}\r\n            />\r\n            <br />\r\n            <TextField\r\n              type=\"password\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              className={styles.textfield}\r\n            />\r\n            <br />\r\n            <div>\r\n              <TextField\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                className={styles.firstName}\r\n              />\r\n              <TextField\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                className={styles.lastName}\r\n              />\r\n            </div>\r\n            <br />\r\n            <FormControl className={styles.recoveryQuestion}>\r\n              <InputLabel id=\"demo-simple-select-filled-label\">\r\n                Recovery Question 1\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-filled-label\"\r\n                id=\"demo-simple-select-filled\"\r\n                value={question1}\r\n                onChange={handleQuestion1}\r\n              >\r\n                {Object.values(recoveryQuestions).map((question: any) => (\r\n                  <MenuItem key={question} value={question}>\r\n                    {question}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <TextField\r\n              name=\"answer1\"\r\n              label=\"Answer Question 1\"\r\n              className={styles.textfield}\r\n            />\r\n            <br />\r\n            <FormControl className={styles.recoveryQuestion}>\r\n              <InputLabel id=\"demo-simple-select-helper-label\">\r\n                Recovery Question 2\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-helper-label\"\r\n                id=\"demo-simple-select-helper\"\r\n                value={question2}\r\n                onChange={handleQuestion2}\r\n              >\r\n                {Object.values(recoveryQuestions).map((question: any) => (\r\n                  <MenuItem key={question} value={question}>\r\n                    {question}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <TextField\r\n              name=\"answer2\"\r\n              label=\"Answer Question 2\"\r\n              className={styles.textfield}\r\n            />\r\n            <br />\r\n            {registrationErrorMessage ? (\r\n              <Typography className={styles.error}>\r\n                {registrationErrorMessage}\r\n              </Typography>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n              type=\"submit\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} md={5} className={` ${styles.grid}`}>\r\n          <Typography variant=\"h3\">Badob Inc</Typography>\r\n          <img src={bike_logo} alt=\"bike_logo\" className={styles.logo}></img>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    trigger: {\r\n      background: \"#DDDDDD\",\r\n      maxWidth: 350\r\n    },\r\n  }));\r\n\r\nexport default useStyles;","// DEPENDENCIES\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport {\r\n  Switch,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./TriggersStyles\";\r\n\r\n/*\r\n  The Triggers component.\r\n  Admins, managers and employees can view triggers and activate/deactivate them.\r\n*/\r\nconst Triggers = ({ account, isAuthenticated }: any) => {\r\n  const styles = useStyles();\r\n  const url = BACKEND_URL;\r\n\r\n  const [triggers, setTriggers] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`${url}/triggers`).then((response) => {\r\n      setTriggers(response.data);\r\n    });\r\n  }, [url, account.authenticated, isAuthenticated, account.loading]);\r\n\r\n  const handleChange = async (triggerType: string) => {\r\n    await Axios.put(`${url}/triggers/toggle/` + triggerType);\r\n    Axios.get(`${url}/triggers/`).then((response) => {\r\n      setTriggers(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"triggerComponent\" className={styles.trigger}>\r\n        <br></br>\r\n        { (account.account.role !== \"CUSTOMER\")\r\n          && <Typography style={{ textTransform: \"capitalize\" }} variant=\"h5\">Triggers</Typography> \r\n        }\r\n        {triggers.map((trigger) => (\r\n          <FormControl>\r\n            <FormGroup>\r\n              {(account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\") && (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={Boolean(trigger.ROLE_CHANGE)}\r\n                    onChange={() => handleChange(\"ROLE_CHANGE\")}\r\n                  />\r\n                }\r\n                label=\"Send an email upon changing a user's role\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              )}\r\n              {(account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\" || account.account.role === \"EMPLOYEE\") && (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={Boolean(trigger.COMPONENT_ORDER)}\r\n                    onChange={() => handleChange(\"COMPONENT_ORDER\")}\r\n                  />\r\n                }\r\n                label=\"Receive an email upon order completion for a component\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              )}\r\n              {(account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\" || account.account.role === \"EMPLOYEE\") && (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={Boolean(trigger.BIKE_ORDER)}\r\n                    onChange={() => handleChange(\"BIKE_ORDER\")}\r\n                  />\r\n                }\r\n                label=\"Receive email upon order completion for a bike\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              )}\r\n            </FormGroup>\r\n          </FormControl>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Triggers);","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  recentPayableTransactions: {\r\n    maxWidth: 350,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"30px\",\r\n    }\r\n  },\r\n  headerCell: {\r\n    paddingTop: 0\r\n  },\r\n  seeMore: {\r\n    backgroundColor: \"black\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport { Button, Card, CardActions, CardContent, Table, TableBody, TableCell, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./RecentPayableTransactionsStyles\";\r\n\r\n/*\r\n  Displays the five most recent account payable transactions.\r\n  Also links to the full account payable information.\r\n*/\r\nconst RecentPayableTransactions = ({ account }: any) => {\r\n\r\n  const classes = useStyles();\r\n  const backend = BACKEND_URL;\r\n\r\n  const [accountPayables, setAccountPayables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${backend}/finance/accountPayables`)\r\n      .then((response) => {\r\n        setAccountPayables(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  }, [backend]);\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.recentPayableTransactions}>\r\n      <CardContent style={{ paddingBottom: 0 }}>\r\n        <Typography style={{ textTransform: \"capitalize\" }} variant=\"h5\">\r\n          Recent Account Payable Transactions\r\n        </Typography>\r\n      </CardContent>\r\n      <CardContent>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.headerCell}>Order number</TableCell>\r\n              <TableCell className={classes.headerCell}>Date</TableCell>\r\n              <TableCell className={classes.headerCell}>Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              Object.keys(accountPayables).length < 5\r\n              ? Object.values(accountPayables).map((order: any) => (\r\n                  <TableRow key={order.account_payable_id}>\r\n                    <TableCell>{order.account_payable_id}</TableCell>\r\n                    <TableCell>{order.payable_date.substring(0, 10)}</TableCell>\r\n                    <TableCell>{\"$\" + order.total.toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n              : Object.values(accountPayables).slice(0, 4).map((order: any) => (\r\n                  <TableRow key={order.account_payable_id}>\r\n                    <TableCell>{order.account_payable_id}</TableCell>\r\n                    <TableCell>{order.payable_date.substring(0, 10)}</TableCell>\r\n                    <TableCell>{\"$\" + order.total.toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.seeMore}>\r\n        <Button href=\"/accountPayable\" size=\"medium\" style={{color: \"white\"}}>SEE MORE</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account.account\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RecentPayableTransactions);","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  recentReceivableTransactions: {\r\n    maxWidth: 350,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"30px\",\r\n    }\r\n  },\r\n  headerCell: {\r\n    paddingTop: 0\r\n  },\r\n  seeMore: {\r\n    backgroundColor: \"black\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport { Button, Card, CardActions, CardContent, Table, TableBody, TableCell, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./RecentReceivableTransactionsStyles\";\r\n\r\n/*\r\n  Displays the five most recent account receivable transactions.\r\n  Also links to the full account receivable information.\r\n*/\r\nconst RecentReceivableTransactions = ({ account }: any) => {\r\n\r\n  const classes = useStyles();\r\n  const backend = BACKEND_URL;\r\n\r\n  const [accountReceivables, setAccountReceivables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${backend}/finance/accountReceivables`)\r\n      .then((response) => {\r\n        setAccountReceivables(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  }, [backend]);\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.recentReceivableTransactions}>\r\n      <CardContent style={{ paddingBottom: 0 }}>\r\n        <Typography style={{ textTransform: \"capitalize\" }} variant=\"h5\">\r\n          Recent Account Receivable Transactions\r\n        </Typography>\r\n      </CardContent>\r\n      <CardContent>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.headerCell}>Order number</TableCell>\r\n              <TableCell className={classes.headerCell}>Date</TableCell>\r\n              <TableCell className={classes.headerCell}>Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              Object.keys(accountReceivables).length < 5\r\n              ? Object.values(accountReceivables).map((order: any) => (\r\n                  <TableRow key={order.account_receivable_id}>\r\n                    <TableCell>{order.account_receivable_id}</TableCell>\r\n                    <TableCell>{order.payable_date.substring(0, 10)}</TableCell>\r\n                    <TableCell>{\"$\" + order.total.toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n              : Object.values(accountReceivables).slice(0, 4).map((order: any) => (\r\n                  <TableRow key={order.account_receivable_id}>\r\n                    <TableCell>{order.account_receivable_id}</TableCell>\r\n                    <TableCell>{order.payable_date.substring(0, 10)}</TableCell>\r\n                    <TableCell>{\"$\" + order.total.toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.seeMore}>\r\n        <Button href=\"/accountReceivable\" size=\"medium\" style={{color: \"white\"}}>SEE MORE</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account.account\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RecentReceivableTransactions);","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  home: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\",\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions/AccountActions/accountAction\";\r\n\r\n// SERVICES\r\nimport Triggers from \"../../components/Triggers/Triggers\";\r\nimport RecentPayableTransactions from \"../../components/RecentPurchases/RecentPayableTransactions\";\r\nimport RecentReceivableTransactions from \"../../components/RecentPurchases/RecentReceivableTransactions\";\r\n\r\n// STYLING\r\nimport { Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./HomeStyles\";\r\n\r\n/*\r\n  The homepage.\r\n*/\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.home}>\r\n      <Typography variant=\"h1\">Welcome</Typography>\r\n      <div className={classes.content}>\r\n        <Triggers/>\r\n        <RecentPayableTransactions/>\r\n        <RecentReceivableTransactions/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar: {\r\n    position: \"fixed\",\r\n    background: \"rgba(0, 0, 0, 0.95)\",\r\n    top: 0,\r\n    height: \"40px\",\r\n    width: \"100%\",\r\n    zIndex: 200,\r\n    left: 0\r\n  },\r\n  menuIcon: {\r\n    display: \"flex\",\r\n    color: \"white\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n  navbar_Navigation: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\"\r\n  },\r\n  logo: {\r\n    color: \"white\",\r\n    paddingLeft: \"25px\"\r\n  },\r\n  exitLogo: {\r\n    color: \"white\",\r\n    paddingRight: \"20px\"\r\n  },\r\n  userName: {\r\n    color: \"white\",\r\n    paddingRight: \"20px\"\r\n  },\r\n  logoutId: {\r\n    right: 0,\r\n    position: \"absolute\",\r\n    display: \"flex\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// SERVICES\r\nimport { logout } from \"../../../redux/actions/AccountActions/accountAction\";\r\n\r\n// STYLING\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport useStyles from \"./HeaderStyles\";\r\nimport \"./HeaderStyles.ts\";\r\n\r\n/*\r\n  Horizontal menu on top the page.\r\n  Contains the sidebar menu toggle and the logout option.\r\n*/\r\n\r\nconst Header = ({ setMenuIsOpen, menuIsOpen, logout, account }: any) => {\r\n\r\n  const styles = useStyles();\r\n\r\n  const menuToggleClickHandler = () => { setMenuIsOpen(!menuIsOpen) }\r\n\r\n  const closeMenuLogout = () => {\r\n    logout();\r\n    setMenuIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box className={styles.navbar}>\r\n      <nav className={styles.navbar_Navigation}>\r\n        <Box className={styles.menuIcon}>\r\n          {\r\n            menuIsOpen\r\n            ? <MenuOpenIcon onClick={() => { menuToggleClickHandler() }}/>\r\n            : <MenuIcon onClick={() => { menuToggleClickHandler() }}/>\r\n          }\r\n        </Box>\r\n        <Box>\r\n          <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n            <Typography className={styles.logo}>Bike King</Typography>\r\n          </Link>\r\n        </Box>\r\n        <Box className={styles.logoutId}>\r\n          <Typography className={styles.userName}>Welcome, {account.account.firstName}</Typography>\r\n          <ExitToAppIcon className={styles.exitLogo} onClick={() => { closeMenuLogout() }}></ExitToAppIcon>\r\n        </Box>\r\n      </nav>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    height: \"100%\",\r\n    background: \"rgba(0, 0, 0, 0.75)\",\r\n    boxShadow: \"2px 0px 5px rbga(0,0,0,0.5)\",\r\n    position: \"fixed\",\r\n    top: \"40px\",\r\n    left: \"0\",\r\n    width: \"200px\",\r\n    zIndex: 200\r\n  },\r\n  menuItems: {\r\n    width: \"100%\",\r\n    height: \"60px\",\r\n    listStyleType: \"none\",\r\n    margin: \"0%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    color: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"20px\",\r\n      '&:hover': {\r\n        background: \"rgba(0, 0, 0, 0.90)\",\r\n      }\r\n  }\r\n}));\r\n\r\nexport default useStyles;","// DEPENDENCIES\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// STYLING\r\nimport { List, ListItem, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./SideBarMenuStyle\";\r\n\r\n/*\r\n  Sidebar navigation menu.\r\n*/\r\n\r\nconst SideBarMenu = ({ account }: any) => {\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <nav className={styles.drawer}>\r\n      <List>\r\n        <Link to=\"/orderbike\" style={{ textDecoration: \"none\" }}>\r\n          <ListItem className={styles.menuItems}>\r\n            <Typography>Order Bike</Typography>\r\n          </ListItem>\r\n        </Link>\r\n        {\r\n          (account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\" || account.account.role === \"EMPLOYEE\")\r\n          && <Link to=\"/order\" style={{ textDecoration: \"none\" }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>Order Components</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n        {\r\n          (account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\")\r\n          && <Link to=\"/addComponent\" style={{ textDecoration: \"none\" }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>Add Component</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n        {\r\n          (account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\" || account.account.role === \"EMPLOYEE\")\r\n          && <Link to=\"/inventory\" style={{ textDecoration: \"none\" }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>Inventory</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n        {\r\n          account.account.role === \"ADMIN\"\r\n          && <Link to=\"/userlogs\" style={{ textDecoration: \"none\" }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>User Logs</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n        {\r\n          account.account.role === \"ADMIN\"\r\n          && <Link to=\"/admin\" style={{ textDecoration: \"none\" }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>Permissions</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n        {\r\n          (account.account.role === \"ADMIN\" || account.account.role === \"MANAGER\" || account.account.role === \"EMPLOYEE\")\r\n          && <Link to=\"/accountPayable\" style={{ textDecoration: 'none' }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>Account Payable</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n        {\r\n          <Link to=\"/accountReceivable\" style={{ textDecoration: 'none' }}>\r\n            <ListItem className={styles.menuItems}>\r\n              <Typography>Account Receivable</Typography>\r\n            </ListItem>\r\n          </Link>\r\n        }\r\n      </List>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideBarMenu);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    background: \"white\",\r\n    width: \"30%\",\r\n    margin: \"auto\",\r\n    border: \"solid 1px white\",\r\n    marginTop: \"20%\",\r\n    padding: \"10px\",\r\n    outline: \"none\",\r\n    minHeight: \"140px\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    margin: \"auto\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    marginTop: \"10px\",\r\n  },\r\n  icon: {\r\n    margin: \"auto\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport { useRef, useState } from \"react\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport { logout } from \"../../redux/actions/AccountActions/accountAction\";\r\n\r\n// STYLING\r\nimport { Button, Modal, Typography } from \"@material-ui/core\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport useStyles from \"./IdleTimerContainerStyle\";\r\n\r\n/* \r\n  The IdleTimerContainer handles the user's inactivity period.\r\n  If the user is inactive for a certain period of time, the application will log them out.\r\n  However, the user has the possibility to extend their current session before the timeout timer runs out.\r\n*/\r\n\r\nconst IdleTimerContainer = ({ account, logout }: any) => {\r\n  // Reference to timer binded to react-idle-timer\r\n  const idleTimerRef = useRef(null);\r\n\r\n  // Reference to session countdown when prompted for inactivity\r\n  const sessionTimeoutRef = useRef<any>(null);\r\n  const sessionTimeIntervalRef = useRef<any>(null);\r\n\r\n  // Timeout period in ms\r\n  const timeoutPeriod: number = 10000;\r\n  const [timeoutDisplay, settimeoutDisplay] = useState(timeoutPeriod);\r\n\r\n  // Modal state\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // Object for styling\r\n  const styles = useStyles();\r\n\r\n  // Function for when there is a period of inactivity\r\n  const onIdle = () => {\r\n    if (account.authenticated) {\r\n      setModalOpen(true);\r\n      sessionTimeoutRef.current = setTimeout(setInactive, timeoutPeriod);\r\n      sessionTimeIntervalRef.current = setInterval(() => {\r\n        settimeoutDisplay((timeoutDisplay) => timeoutDisplay - 1000);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // When user is inactive, call logout function from redux store\r\n  const setInactive = () => {\r\n    setModalOpen(false);\r\n    clearTimeout(sessionTimeoutRef.current);\r\n    clearInterval(sessionTimeIntervalRef.current);\r\n    settimeoutDisplay(timeoutPeriod);\r\n    logout();\r\n  };\r\n\r\n  // When Active, close modal and reset timeout\r\n  const setActive = () => {\r\n    setModalOpen(false);\r\n    clearTimeout(sessionTimeoutRef.current);\r\n    clearInterval(sessionTimeIntervalRef.current);\r\n    settimeoutDisplay(timeoutPeriod);\r\n  };\r\n\r\n  // Body representing the modal for inactivity\r\n  const body = (\r\n    <div className={styles.modal}>\r\n      <WarningIcon fontSize=\"large\" className={styles.icon} />\r\n      <Typography className={styles.text}>\r\n        You have been inactive.\r\n        <br />\r\n        Your session will expire in {timeoutDisplay / 1000}\r\n      </Typography>\r\n      <Button className={styles.button} variant=\"contained\" color=\"primary\" onClick={setActive}>\r\n        Extend\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div id=\"idleTimerContainer\">\r\n      <IdleTimer ref={idleTimerRef} timeout={3600000 /*after 1h -> call onIdle*/} onIdle={onIdle}/>\r\n      <Modal open={modalOpen} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IdleTimerContainer);\r\n","// DEPENDENCIES\r\nimport { useState } from \"react\";\r\n\r\n// STYLING\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n// Dropdown styles\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\n/*\r\n  The PermissionDropdown components pertains to the permission dropdown list\r\n*/\r\nconst PermissionDropdown = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [permission, setPermission] = useState(props.permission);\r\n\r\n  // Hanldes change of dropdown list's selection\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setPermission(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className={classes.selectEmpty}\r\n      value={permission}\r\n      onChange={handleChange}\r\n      displayEmpty\r\n    >\r\n      <MenuItem value=\"ADMIN\">ADMIN</MenuItem>\r\n      <MenuItem value=\"MANAGER\">MANAGER</MenuItem>\r\n      <MenuItem value=\"EMPLOYEE\">EMPLOYEE</MenuItem>\r\n      <MenuItem value=\"CUSTOMER\">CUSTOMER</MenuItem>\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default PermissionDropdown;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    padding: \"7px\",\r\n  },\r\n  border: {\r\n    borderBottom: \"1px solid grey\",\r\n  },\r\n  dropdown: {\r\n    borderBottom: \"1px solid grey\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  saveBtn: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"black\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#343835\",\r\n    },\r\n  },\r\n  saveBtnContainer: {\r\n    float: \"right\",\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\nimport PermissionDropdown from \"./PermissionDropdown\";\r\n\r\n// STYLING\r\nimport { Button, Table, TableBody, TableRow } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport useStyles from \"./UserAccountsTableStyle\";\r\n\r\n/*\r\n  Table that contains the users' accounts information\r\n*/\r\nconst UserAccountsTable = (props) => {\r\n\r\n  const styles = useStyles();\r\n\r\n  const [data, setData] = useState<any[]>([]);\r\n  const [initialState] = useState(new Map());\r\n\r\n  // Fetch the accounts from the database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BACKEND_URL}/account_management/admin/accounts`)\r\n      .then((res) => {\r\n        setData(res.data.accounts);\r\n        res.data.accounts.forEach((account: any) => {\r\n          initialState.set(account.email, account.role);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.message);\r\n      });\r\n  }, [initialState]);\r\n\r\n  // Update the roles in the database\r\n  const updateRoles = (event) => {\r\n    event.preventDefault();\r\n    let table: any = document.getElementById(\"accounts\");\r\n    /*eslint-disable */\r\n    for (let i = 1, row: any; (row = table.rows[i]); i++) {\r\n      let userEmail: string = \"\";\r\n      for (let j = 0, col: any; (col = row.cells[j]); j++) {\r\n        if (col.id === \"email\") {\r\n          userEmail = col.innerText;\r\n        }\r\n        if (col.id === \"permission\") {\r\n          let userPermission = col.innerText;\r\n          if (initialState.get(userEmail) !== userPermission) {\r\n            axios\r\n              .patch(`${BACKEND_URL}/account_management/admin/update`, {\r\n                email: userEmail,\r\n                role: userPermission,\r\n              })\r\n              .then((res) => {\r\n                initialState.set(userEmail, userPermission);\r\n              })\r\n              .catch((err) => {\r\n                alert(err.response.data.message);\r\n              });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /*eslint-enable */\r\n    props.setDialogOpen(true);\r\n  };\r\n\r\n  // Display the accounts information in a table\r\n  const renderAccountsData = () => {\r\n    return data.map((account: any, key: any) => {\r\n      return (\r\n        <tr key={key}>\r\n          <td className={styles.border}>{account.account_id}</td>\r\n          <td className={styles.border}>{account.first_name}</td>\r\n          <td className={styles.border}>{account.last_name}</td>\r\n          <td id=\"email\" className={styles.border}>\r\n            {account.email}\r\n          </td>\r\n          <td className={styles.border}>{account.organization}</td>\r\n          <td id=\"permission\" className={styles.dropdown}>\r\n            <PermissionDropdown permission={account.role} />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Render all the headers for the table\r\n  const renderTableHeader = () => {\r\n    const header = [\r\n      \"Account ID\",\r\n      \"First Name\",\r\n      \"Last Name\",\r\n      \"Email\",\r\n      \"Organization\",\r\n      \"Role\",\r\n    ];\r\n    return header.map((title, index) => {\r\n      return (\r\n        <th className={styles.tableHeader} key={index}>\r\n          {title.toUpperCase()}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"accountsTable\">\r\n      <div>\r\n        <Table stickyHeader id=\"accounts\">\r\n          <TableRow> {renderTableHeader()} </TableRow>\r\n          <TableBody>{renderAccountsData()}</TableBody>\r\n        </Table>\r\n      </div>\r\n      <div className={styles.saveBtnContainer}>\r\n        <Button\r\n          className={styles.saveBtn}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={updateRoles}\r\n          startIcon={<SaveIcon />}\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAccountsTable;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  adminPageWrapper: {\r\n    margin: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"10%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  title: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"200%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n      marginBottom: \"50px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n  place: {\r\n    maxHeight: \"50px\",\r\n    width: \"70%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n      minHeight: \"500px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n      minHeight: \"650px\",\r\n    },\r\n  },\r\n  grid: {\r\n    float: \"right\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n    },\r\n  },\r\n  button: {\r\n    width: \"20%\",\r\n    marginTop: \"10px\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport UserAccountsTable from \"../../components/PermissionManagement/UserAccountsTable\";\r\n\r\n// STYLING\r\nimport {\r\n  Grid, Paper, Typography, Button,\r\n  Dialog, DialogTitle, DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport useStyles from \"./PermissionManagementStyle\";\r\n\r\n\r\n/*\r\n  Management page where users will go to manage user permissions\r\n*/\r\nconst PermissionManagement = ({ account }: any) => {\r\n\r\n  const styles = useStyles();\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"permissionPage\">\r\n      <div id=\"loginPage\">\r\n        <Grid container direction=\"column\" justify=\"center\">\r\n          <Grid item xs={12} md={12}>\r\n            <Typography className={styles.title} variant=\"h4\">\r\n              Permission Management\r\n            </Typography>\r\n          </Grid>\r\n          <Grid wrap=\"nowrap\" item xs={12} md={12}>\r\n            <Paper className={styles.place}>\r\n              <UserAccountsTable setDialogOpen={setDialogOpen} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Dialog open={dialogOpen} onClose={handleDialogClose}>\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Role(s) updated successfully.\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            <CheckIcon />\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PermissionManagement);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"200%\",\r\n  },\r\n  background: {\r\n    background: \"#DDDDDD\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"black\",\r\n    padding: \"7px\",\r\n  },\r\n  tableStyle: {\r\n    width: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  innerTable: {\r\n    background: \"#FFFFFF\",\r\n  },\r\n  topRow: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    background: \"black\",\r\n    minWidth:\"150px\",\r\n  },\r\n  place: {\r\n    maxHeight: \"50px\",\r\n    width: \"70%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n      minHeight: \"500px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n      minHeight: \"650px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BACKEND_URL } from \"../../core/utils/config\"\r\n\r\n// STYLING\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Paper, TableSortLabel, createMuiTheme, ThemeProvider } from \"@material-ui/core\"\r\nimport useStyles from \"./InventoryStyles\";\r\n\r\n/*\r\n  The inventory page.\r\n  This shows what a logged-in user's inventory contains.\r\n*/\r\nconst Inventory: React.FC = () => {\r\n  const [inventoryTable, setInventoryTable] = useState<any[]>([]);\r\n  const [sortOrder, setSortOrder] = useState({ 'component_type': 0, 'price': 0, 'quantity': 0, 'component_status': 0, 'size': 0, 'specificComponentType': 0, 'location_name': 0 });\r\n  const [arrowUp, setArrowUp] = useState({ 'component_type': true, 'price': true, 'quantity': true, 'component_status': true, 'size': true, 'specificComponentType': true, 'location_name': true });\r\n  const URL = BACKEND_URL\r\n\r\n  useEffect(() => {\r\n    axios.get(`${URL}/components`).then((response) => {\r\n      setInventoryTable(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTableSortLabel: {\r\n        icon: {\r\n          color: \"white\",\r\n          opacity: 1,\r\n          marginBottom: \"3px\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  // Method to sort table depending on the column header clicked\r\n  const sortTable = (sortBy: string) => {\r\n    let sortBy2 = sortBy + '2';\r\n    let sortedTable = inventoryTable.slice(0);\r\n    let sortDirection = sortOrder[sortBy];\r\n    let newSortDirection = sortOrder;\r\n    let newArrowDirection = arrowUp;\r\n\r\n    sortedTable.sort((a, b) => {\r\n      let x = '';\r\n      let y = '';\r\n\r\n      const sortByObject = {\r\n        'component_type': a.component_type,\r\n        'component_type2': b.component_type,\r\n        'price': a.price,\r\n        'price2': b.price,\r\n        'quantity': a.quantity,\r\n        'quantity2': b.quantity,\r\n        'component_status': a.component_status,\r\n        'component_status2': b.component_status,\r\n        'size': a.size,\r\n        'size2': b.size,\r\n        'specificComponentType': a.specificComponentType,\r\n        'specificComponentType2': b.specificComponentType,\r\n        'location_name': a.location_name,\r\n        'location_name2': b.location_name\r\n      }\r\n\r\n      if (sortDirection === 0) {\r\n        x = sortByObject[sortBy];\r\n        y = sortByObject[sortBy2];\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      } else {\r\n        x = sortByObject[sortBy];\r\n        y = sortByObject[sortBy2];\r\n        return x > y ? -1 : x < y ? 1 : 0;\r\n      }\r\n    });\r\n\r\n    if (sortDirection === 0) {\r\n      newSortDirection[sortBy] = 1;\r\n      newArrowDirection[sortBy] = true;\r\n    } else {\r\n      newSortDirection[sortBy] = 0;\r\n      newArrowDirection[sortBy] = false;\r\n    }\r\n\r\n    setSortOrder(newSortDirection);\r\n    setArrowUp(newArrowDirection);\r\n    setInventoryTable([...sortedTable]);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"inventoryPageTest\" className={classes.background}>\r\n        <br></br>\r\n        <div className={classes.title}>Inventory</div>\r\n        <br></br>\r\n        <Paper className={classes.place}>\r\n          <Table size=\"small\" stickyHeader className={classes.tableStyle}>\r\n            <TableHead className={classes.tableHead}>\r\n              <TableRow>\r\n                <ThemeProvider theme={theme}>\r\n                  <TableCell className={classes.topRow}> Type <TableSortLabel direction={arrowUp['component_type'] ? \"asc\" : \"desc\"} onClick={() => sortTable('component_type')}></TableSortLabel></TableCell>\r\n                  <TableCell className={classes.topRow}> Price <TableSortLabel direction={arrowUp['price'] ? \"asc\" : \"desc\"} onClick={() => sortTable('price')}></TableSortLabel></TableCell>\r\n                  <TableCell className={classes.topRow}> Quantity <TableSortLabel direction={arrowUp['quantity'] ? \"asc\" : \"desc\"} onClick={() => sortTable('quantity')}></TableSortLabel></TableCell>\r\n                  <TableCell className={classes.topRow}> Status <TableSortLabel direction={arrowUp['component_status'] ? \"asc\" : \"desc\"} onClick={() => sortTable('component_status')}></TableSortLabel></TableCell>\r\n                  <TableCell className={classes.topRow}> Size <TableSortLabel direction={arrowUp['size'] ? \"asc\" : \"desc\"} onClick={() => sortTable('size')}></TableSortLabel></TableCell>\r\n                  <TableCell className={classes.topRow}> Component Type <TableSortLabel direction={arrowUp['specificComponentType'] ? \"asc\" : \"desc\"} onClick={() => sortTable('specificComponentType')}></TableSortLabel></TableCell>\r\n                  <TableCell className={classes.topRow}> Location <TableSortLabel direction={arrowUp['location_name'] ? \"asc\" : \"desc\"} onClick={() => sortTable('location_name')}></TableSortLabel></TableCell>\r\n                </ThemeProvider>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {inventoryTable.map((row) => (\r\n                <TableRow key={row.component_id}>\r\n                  <TableCell className={classes.innerTable}>\r\n                    {row.component_type}\r\n                  </TableCell>\r\n                  <TableCell className={classes.innerTable}>\r\n                    {row.price}\r\n                  </TableCell>\r\n                  <TableCell className={classes.innerTable}>\r\n                    {row.quantity}\r\n                  </TableCell>\r\n                  <TableCell className={classes.innerTable}>\r\n                    {row.component_status}\r\n                  </TableCell>\r\n                  <TableCell className={classes.innerTable}>{row.size}</TableCell>\r\n                  <TableCell className={classes.innerTable}>\r\n                    {row.specificComponentType}\r\n                  </TableCell>\r\n                  <TableCell className={classes.innerTable}>\r\n                    {row.location_name}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridList: {\r\n        display:\"block\",\r\n        margin:\"auto\",\r\n        width:\"100%\"\r\n    },\r\n    grid:{\r\n        display:\"grid\",\r\n        placeItems:\"center\",\r\n    },\r\n    componentName:{\r\n        fontSize:\"25px\",\r\n        fontWeight:\"bold\"\r\n    },\r\n    addCart:{\r\n        margin:\"10px\"\r\n    },\r\n    title: {\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"200%\",\r\n        marginBottom:\"25px\"\r\n      },\r\n})\r\n);\r\n\r\nexport default useStyles;","export const ADD_ITEM: string = \"ADD_ITEM\"\r\nexport const REMOVE_ITEM:string = \"REMOVE_ITEM\"\r\nexport const REMOVE_ALL_ITEMS:string = \"REMOVE_ALL_ITEMS\"\r\nexport const UPDATE_QUANTITY:string = \"UPDATE_QUANTITY\"","import {\r\n  ADD_ITEM,\r\n  REMOVE_ALL_ITEMS,\r\n  REMOVE_ITEM,\r\n  UPDATE_QUANTITY\r\n} from '../../types/OrderListTypes/orderListTypes';\r\n\r\nexport interface Order {\r\n  id: number\r\n  quantity: number\r\n  info: string,\r\n  price: number\r\n  selectedQuantity: number\r\n}\r\n\r\nexport const addItem = (order: Order) => {\r\n  return {\r\n    type: ADD_ITEM,\r\n    payload: order\r\n  }\r\n}\r\n\r\nexport const removeItem = (orderList) => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    payload: orderList\r\n  }\r\n}\r\n\r\nexport const removeAllItem = () => {\r\n  return {\r\n    type: REMOVE_ALL_ITEMS\r\n  }\r\n}\r\n\r\nexport const updateQuantity = (orderList)=>{\r\n  return{\r\n    type:UPDATE_QUANTITY,\r\n    payload:orderList\r\n  }\r\n}\r\n\r\nexport const changeQuantity = (orderList: Array<any>, component_id, newQuantitySelected: number) => {\r\n  return (dispatch: any) => {\r\n    const findComponent = (component) => component.id === component_id\r\n    const index = orderList.findIndex(findComponent)\r\n    orderList[index].selectedQuantity = newQuantitySelected\r\n    dispatch(updateQuantity(orderList))\r\n  }\r\n}\r\n\r\nexport const deleteItemFromCart = (orderList:Array<any>, component_id)=>{\r\n  return (dispatch:any)=>{\r\n    const findComponent = (component) => component.id === component_id\r\n    const index = orderList.findIndex(findComponent)\r\n    orderList.splice(index, 1)\r\n    dispatch(removeItem(orderList))\r\n  }\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    billingContainer:{\r\n        background:\"#F7F7F7\",\r\n        height:\"90vh\",\r\n        marginRight:\"40px\",\r\n        marginLeft:\"40px\",\r\n        overflow:\"scroll\",\r\n        minWidth:\"400px\"\r\n    },\r\n    title:{\r\n        textAlign:\"left\",\r\n        borderBottom:\"solid 1px black\",\r\n        width:\"40%\",\r\n        marginLeft:\"40px\",\r\n        marginBottom:\"20px\",\r\n        paddingTop:\"20px\",\r\n    },\r\n    itemRow:{\r\n        margin:\"15px\"\r\n    },\r\n    item:{\r\n        textAlign:\"center\"\r\n    },\r\n    header:{\r\n        textAlign:\"center\",\r\n        padding:\"10px\",\r\n        minWidth:\"20px\"\r\n    },\r\n    headerRow:{\r\n        background:\"#C4C4C4\"\r\n    }\r\n})\r\n);\r\n\r\nexport default useStyles;","import { Grid, Typography, Button } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { removeAllItem, changeQuantity, deleteItemFromCart } from \"../../redux/actions/OrderListActions/orderListAction\"\r\nimport useStyles from \"./OrderSummaryStyle\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport axios from \"axios\"\r\nimport { BACKEND_URL } from \"../../core/utils/config\"\r\n\r\nconst OrderSummary = ({ orderList, removeItem, removeAllItems, updateQuantity }: any) => {\r\n    const classes = useStyles()\r\n    const url = BACKEND_URL\r\n    const [total, setTotal] = useState(0)\r\n    // Update the list of order in the backend\r\n    const updateQuantityOfListOrder = () => {\r\n        if (orderList.orderList.length > 0) {\r\n            axios.put(`${url}/components/orderComponents`, {\r\n                orderList: orderList\r\n            })\r\n            clearCart()\r\n        }\r\n    };\r\n\r\n    const clearCart = () => {\r\n        removeAllItems()\r\n        setTotal(0)\r\n    };\r\n\r\n    useEffect(() => {\r\n        let cartTotal=0\r\n        for(let i=0;i<orderList.orderList.length;i++){\r\n            cartTotal = cartTotal + orderList.orderList[i].price * orderList.orderList[i].selectedQuantity\r\n            if(orderList.orderList.length-1===i){\r\n                setTotal(cartTotal)\r\n            }\r\n        }\r\n    }, [orderList.orderList])\r\n\r\n    const ItemRow = ({ component }) => {\r\n        const [componentId] = useState(component.id)\r\n\r\n        return (\r\n            <Grid item container xs={12} className={classes.itemRow} alignItems=\"center\" >\r\n                <Grid item xs={1}>\r\n                    <Button onClick={() => { removeItem(orderList.orderList, componentId) }}><RemoveCircleOutlineIcon /></Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography className={classes.item}>{component.info}</Typography>\r\n                </Grid>\r\n                <Grid item xs={3} container alignItems=\"center\">\r\n                    <Grid item xs={4} >\r\n                        <Button onClick={() => {\r\n                            if (!(component.selectedQuantity - 1 < 1)) {\r\n                                setTotal(total => total - component.price)\r\n                                updateQuantity(orderList.orderList, componentId, component.selectedQuantity - 1)\r\n                            }\r\n                        }}>\r\n                            <RemoveIcon />\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.item}>{component.selectedQuantity}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <Button onClick={() => {\r\n                            setTotal(total => total + component.price)\r\n                            updateQuantity(orderList.orderList, componentId, component.selectedQuantity + 1)\r\n                        }}>\r\n                            <AddIcon />\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography className={classes.item}>$ {component.price}</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography className={classes.item}>$ {Number(component.price) * Number(component.selectedQuantity)}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.billingContainer}>\r\n            <Grid container spacing={0} >\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" className={classes.title}>Billing</Typography>\r\n                </Grid>\r\n                <Grid item container xs={12} className={classes.headerRow}>\r\n                    <Grid item className={classes.header} xs={1}></Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography className={classes.header} variant=\"h6\">Name</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.header} variant=\"h6\">Quantity</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.header} variant=\"h6\">Unit Price</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.header} variant=\"h6\">Total</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {\r\n                    orderList.orderList.map((component) => (\r\n                        <ItemRow key={component.id} component={component}></ItemRow>\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                orderList.orderList.length !== 0 && <>\r\n                    <Typography variant=\"h6\">Total: ${total}</Typography>\r\n                    <Button variant=\"contained\" onClick={updateQuantityOfListOrder}>Proceed</Button>\r\n                    <Button variant=\"contained\" onClick={removeAllItems}>Clear Cart</Button>\r\n                </>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        orderList: state.orderList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        removeItem: (orderList, componentId: number) => dispatch(deleteItemFromCart(orderList, componentId)),\r\n        removeAllItems: () => dispatch(removeAllItem()),\r\n        updateQuantity: (orderList, componentId, newQuantity) => dispatch(changeQuantity(orderList, componentId, newQuantity))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderSummary)","import { Grid, GridList, MenuItem, Select, Typography, GridListTile, Button, Snackbar } from \"@material-ui/core\"\r\nimport { ToggleButton, ToggleButtonGroup, Alert, AlertTitle } from \"@material-ui/lab\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { BACKEND_URL } from \"../../core/utils/config\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport useStyles from \"./OrderComponentStyle\"\r\nimport { connect } from \"react-redux\"\r\nimport { addItem, Order } from \"../../redux/actions/OrderListActions/orderListAction\"\r\nimport OrderSummary from \"../../components/OrderSummary/OrderSummary\"\r\n\r\n// Order Component used for ordering more components\r\nconst OrderComponent = ({ addItem, orderList }) => {\r\n    const URL = BACKEND_URL\r\n\r\n    const [selectSize, setSelectSize] = useState<string | null>('')\r\n    const handleSelectSize = (event: React.MouseEvent<HTMLElement>, selectedSize: string | null) => {\r\n        setSelectSize(selectedSize)\r\n    }\r\n\r\n    const [location, setLocation] = useState<string>(\"\")\r\n    const handleSelectLocation = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setLocation(event.target.value as string)\r\n    }\r\n\r\n    const [selected, setSelected] = useState('')\r\n    const handleChangeSelected = (event: React.MouseEvent<HTMLElement>, component_id: string, component) => {\r\n        setSelected(component_id)\r\n    }\r\n\r\n    const [locationList, setLocationList] = useState([])\r\n\r\n    const [componentList, setComponentList] = useState<any>(undefined)\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false);\r\n    const [snackMessage, setSnackMessage] = useState(\"\");\r\n    const handleClose = () => {\r\n        setSnackOpen(false);\r\n    };\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${URL}/components/locations/all`,\r\n        ).then((response) => {\r\n            setLocationList(response.data)\r\n        }).catch(error => {\r\n            setSnackMessage(error.message);\r\n            setSnackOpen(true)\r\n        })\r\n    }, [URL, orderList.orderList])\r\n\r\n    useEffect(() => {\r\n        const getComponentBySizeAndLocation = () => {\r\n            if (selectSize && location) {\r\n                axios.get(`${URL}/components/componentTypes`,\r\n                    {\r\n                        params: {\r\n                            location: location,\r\n                            size: selectSize\r\n                        }\r\n                    }).then(response => {\r\n                        setComponentList(response.data)\r\n                    }).catch(error => {\r\n                        setSnackMessage(error.message);\r\n                        setSnackOpen(true)\r\n                    })\r\n            }\r\n        }\r\n\r\n        getComponentBySizeAndLocation()\r\n    }, [selectSize, location, URL, orderList.orderList])\r\n\r\n    const checkForDuplicateItem = (order: Order, selectedId: number) => {\r\n        return (order.id !== selectedId);\r\n    }\r\n\r\n    const handleAddToCart = () => {\r\n        axios.get(`${URL}/components/${selected}`).then(response => {\r\n            const retrievedComponent = response.data[0]\r\n\r\n            if (!orderList.orderList.every((order: any) => checkForDuplicateItem(order, parseInt(selected)))) {\r\n                setSnackMessage(\"The bike with the parts you've chosen already exists\");\r\n                setSnackOpen(true)\r\n                return\r\n            }\r\n\r\n            addItem(\r\n                {\r\n                    id: selected,\r\n                    quantity: retrievedComponent.quantity,\r\n                    info: `${retrievedComponent.component_type} of type ${retrievedComponent.specificComponentType} ${selectSize}`,\r\n                    price: retrievedComponent.price,\r\n                    selectedQuantity: 1\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const StyledToggleButtonGroup = withStyles((theme) => ({\r\n        grouped: {\r\n            margin: theme.spacing(0.5),\r\n            border: 'none',\r\n            '&:not(:first-child)': {\r\n                borderRadius: theme.shape.borderRadius,\r\n            },\r\n            '&:first-child': {\r\n                borderRadius: theme.shape.borderRadius,\r\n            },\r\n        },\r\n    }))(ToggleButtonGroup);\r\n\r\n    const ComponentRow = ({ componentType, componentList, selected, handleChangeSelected }) => {\r\n        return (\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"h5\">{componentType}</Typography>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <GridList className={classes.gridList}>\r\n                        <StyledToggleButtonGroup value={selected} exclusive onChange={(e, component_id: string) => { handleChangeSelected(e, component_id) }}>\r\n                            {\r\n                                componentList.map((component): any => (\r\n                                    <ToggleButton value={component.component_id} key={component.component_id}>\r\n                                        <GridListTile>\r\n                                            <Typography className={classes.componentName}>{component.specificComponentType}</Typography>\r\n                                            <Typography>Price: ${component.price}</Typography>\r\n                                            <Typography>Quantity: {component.quantity}</Typography>\r\n                                        </GridListTile>\r\n                                    </ToggleButton>\r\n                                ))\r\n                            }\r\n                        </StyledToggleButtonGroup>\r\n                    </GridList>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h2\" className={classes.title}>\r\n                        Order Component\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={7} container style={{ height: \"100%\" }}>\r\n\r\n                    {/* Inventory Location */}\r\n                    <Grid item container xs={12} alignItems=\"center\" style={{ marginBottom: \"20px\" }}>\r\n                        <Grid item xs={3}>\r\n                            <Typography variant=\"h5\">Location</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Select name=\"inventoryLocation\" defaultValue={\"\"} onChange={(e: any) => { handleSelectLocation(e); }}>\r\n                                {\r\n                                    locationList.map((location: any) => <MenuItem key={location.location_name} value={location.location_name}>{location.location_name}</MenuItem>)\r\n                                }\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Frame Size */}\r\n                    <Grid item container xs={12} alignItems=\"center\" style={{ marginBottom: \"20px\" }}>\r\n                        <Grid item xs={3} >\r\n                            <Typography variant=\"h5\">Frame Size</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <StyledToggleButtonGroup\r\n                                value={selectSize}\r\n                                exclusive\r\n                                onChange={(e: any, selectSize: string) => { handleSelectSize(e, selectSize); }}\r\n                            >\r\n                                <ToggleButton value=\"SMALL\">Small</ToggleButton>\r\n                                <ToggleButton value=\"MEDIUM\" >Medium</ToggleButton>\r\n                                <ToggleButton value=\"LARGE\" >Large</ToggleButton>\r\n                            </StyledToggleButtonGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {\r\n                        componentList &&\r\n                        <>\r\n                            <ComponentRow selected={selected} handleChangeSelected={handleChangeSelected} componentList={componentList.FRAME} componentType={\"Frame Type\"}></ComponentRow>\r\n                            <ComponentRow selected={selected} handleChangeSelected={handleChangeSelected} componentList={componentList.SEAT} componentType={\"Saddle Type\"}></ComponentRow>\r\n                            <ComponentRow selected={selected} handleChangeSelected={handleChangeSelected} componentList={componentList.HANDLE} componentType={\"Handle Type\"}></ComponentRow>\r\n                            <ComponentRow selected={selected} handleChangeSelected={handleChangeSelected} componentList={componentList.WHEEL} componentType={\"Wheel Type\"}></ComponentRow>\r\n                            <ComponentRow selected={selected} handleChangeSelected={handleChangeSelected} componentList={componentList.DRIVE_TRAIN} componentType={\"Drive Train Type\"}></ComponentRow>\r\n                            <Grid item container xs={12}>\r\n                                <Grid item xs={12}>\r\n                                    <Button variant=\"contained\" onClick={handleAddToCart} className={classes.addCart}>\r\n                                        Add To Cart\r\n                                    </Button>\r\n                                    <Snackbar\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={snackOpen}\r\n                                        autoHideDuration={6000}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        <Alert severity=\"error\" onClose={handleClose}>\r\n                                            <AlertTitle>Error</AlertTitle>\r\n                                            {snackMessage}\r\n                                        </Alert>\r\n                                    </Snackbar>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <OrderSummary></OrderSummary>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        orderList: state.orderList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addItem: (order: Order) => dispatch(addItem(order))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderComponent)\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"200%\",\r\n  },\r\n  background: {\r\n    background: \"#DDDDDD\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"black\",\r\n    padding: \"7px\",\r\n  },\r\n  tableStyle: {\r\n    width: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  innerTable: {\r\n    background: \"#FFFFFF\",\r\n  },\r\n  topRow: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    background: \"black\",\r\n    minWidth:\"150px\",\r\n  },\r\n  place: {\r\n    maxHeight: \"50px\",\r\n    width: \"70%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n      minHeight: \"500px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n      minHeight: \"650px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;","// DEPENDENCIES\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Paper } from \"@material-ui/core\";\r\nimport useStyles from \"./UserLogsStyles\";\r\n\r\n/*\r\n  The UserLogs page.\r\n  Admins can view logs and audit trails of all users.\r\n*/\r\nconst UserLogs: React.FC = () => {\r\n\r\n  const styles = useStyles();\r\n  const url = BACKEND_URL;\r\n\r\n  const [logTable, setlogTable] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`${url}/userlogs/`).then((response) => {\r\n      setlogTable(response.data);\r\n    });\r\n  }, [url]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"userLogsPage\" className={styles.background}>\r\n        <br></br>\r\n        <div className={styles.title}>User Logs</div>\r\n        <br></br>\r\n        <Paper className={styles.place}>\r\n          <Table size=\"small\" stickyHeader className={styles.tableStyle}>\r\n            <TableHead className={styles.tableHead}>\r\n              <TableRow>\r\n                <TableCell className={styles.topRow}>Time</TableCell>\r\n                <TableCell className={styles.topRow}>User</TableCell>\r\n                <TableCell className={styles.topRow}>Activity</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {logTable.map((row) => (\r\n                <TableRow key={row.log_id}>\r\n                  <TableCell className={styles.innerTable}>\r\n                    {row.timestamp}\r\n                  </TableCell>\r\n                  <TableCell className={styles.innerTable}>\r\n                    {row.email}\r\n                  </TableCell>\r\n                  <TableCell className={styles.innerTable}>\r\n                    {row.activity}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserLogs;","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  payableHistory: {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    maxWidth: \"70%\",\r\n  },\r\n  userDetails: {\r\n    textAlign: \"right\",\r\n    paddingTop: 0,\r\n    paddingBottom: 20,\r\n    paddingLeft: 0,\r\n    paddingRight: 20,\r\n  },\r\n  dataContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  orderCell: {\r\n    border: 1,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderStyle: \"solid\"\r\n  },\r\n  export: {\r\n    textAlign:\"right\"\r\n  },\r\n  tableHeader: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    padding: \"7px\",\r\n    border: 1,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderStyle: \"solid\",\r\n  },\r\n  place: {\r\n    maxHeight: \"50px\",\r\n    maxWeidth: \"50px\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n      minHeight: \"500px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n      minHeight: \"650px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: \"30%\",\r\n    [theme.breakpoints.down('md')]: {\r\n      width: \"250px\"\r\n    },\r\n    backgroundColor: \"rgb(221, 221, 221)\",\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n  },\r\n  date: {\r\n    display:\"flex\",\r\n    alignItems:\"center\"\r\n  },\r\n  close: {\r\n    position:\"absolute\",\r\n    top: 10,\r\n    right: 10,\r\n  },\r\n  dateBox: {\r\n    width:\"70%\"\r\n  },\r\n  title: {\r\n    textAlign:\"center\"\r\n  },\r\n  errorMessage: {\r\n    fontSize:\"12px\",\r\n    color:\"red\"\r\n  },\r\n  confirmationButton:{\r\n    textAlign:\"center\",\r\n    margin:\"50\"\r\n  },\r\n  confirmationModal: {\r\n    position: 'absolute',\r\n    width: \"20%\",\r\n    [theme.breakpoints.down('md')]: {\r\n      width: \"200px\"\r\n    },\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n  },\r\n  confirmButton: {\r\n    marginTop: \"10px\"\r\n  },\r\n  myData: {\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    alignItems: \"center\"\r\n  },\r\n  myDataTitle: {\r\n    fontSize: \"12px\",\r\n    paddingBottom: \"3px\"\r\n  }, \r\n  return: {\r\n    position:\"absolute\",\r\n    left:12,\r\n    top:12,\r\n  },\r\n  csv: {\r\n    textDecoration:\"none\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;","//React\r\nimport { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from 'react-datepicker';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n//Material-ui\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Box, Button, Typography } from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\r\n\r\n//PDF js\r\nimport jsPDF from 'jspdf';\r\nimport autotable from 'jspdf-autotable';\r\n\r\n//Style\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport useStyles from './DataExportStyle';\r\n\r\n//APIs\r\nimport axios from 'axios';\r\n\r\n//From project import\r\nimport bike_logo from \"../../assets/images/login_bike_logo.png\";\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n//This component offers the users the possibility of exporting datas (transactions) in a CSV or PDF format.\r\n\r\nconst DataExport = ({ reportType, account }: any) => {\r\n\r\n  const url = BACKEND_URL;\r\n  const classes = useStyles();\r\n\r\n  //getting image from asset for the pdf\r\n  var img = new Image();\r\n  img.src = bike_logo;\r\n\r\n  //verify status of modals\r\n  const [open, setOpen] = useState(false);\r\n  const [openConfirmation, setOpenConfirmation] = useState(false);\r\n\r\n  //set dates for report generation\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  //verification of valid dates\r\n  const [datesAreSelected, setDatesAreSelected] = useState(true);\r\n  const [noneSensDate, setNoneSenseDate] = useState(false);\r\n\r\n  //verify if export all data or only for the logged user\r\n  const [exportMyDataOnly, setExportMyDataOnly] = useState(false);\r\n\r\n  //verify if the users has data\r\n  const [noData, setNoData] = useState(false);\r\n\r\n  //define csv property\r\n  const [data, setData] = useState([]);\r\n  const [reportHeader, setReportHeader] = useState<any[]>([]);\r\n\r\n  //fetching data from backend\r\n  const getdata = async () => {\r\n    //Foramting the date: YYYY-MM-DD\r\n    const formatStartDate = convertDate(startDate);\r\n    const formatEndDate = convertDate(endDate);\r\n    let data: any[] = [];\r\n\r\n    if (reportType === \"payable\") {\r\n      await axios.get(`${url}/finance/accountPayables/report`, {\r\n        params: {\r\n          startDate: formatStartDate + \" 00:00:00\",\r\n          endDate: formatEndDate + \" 23:59:59\",\r\n          myDataOnly: exportMyDataOnly\r\n        }\r\n      }).then((response) => {\r\n        data = response.data;\r\n        //calculate total price and total quantity of data\r\n        const { totalQuantity, totalPrice } = calculateTotalExpense(data);\r\n        data.push({ component_id: \"Total\", cost: totalPrice, quantity_bought: totalQuantity });\r\n      });\r\n      setReportHeader(expensesHeaders);\r\n    } else if (reportType === \"receivable\") {\r\n      await axios.get(`${url}/finance/accountReceivables/report`, {\r\n        params: {\r\n          startDate: formatStartDate + \" 00:00:00\",\r\n          endDate: formatEndDate + \" 23:59:59\",\r\n          myDataOnly: exportMyDataOnly\r\n        }\r\n      }).then((response) => {\r\n        data = response.data;\r\n        //calculate total price and total quantity of data\r\n        const { totalQuantity, totalPrice } = calculateTotalSales(data);\r\n        data.push({ bike_id: \"Total\", price: totalPrice, quantity: totalQuantity });\r\n      });\r\n      setReportHeader(salesHeaders);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  //handles states when the user is done with exporting\r\n  const downloadReport = async () => {\r\n    handleCloseConfirmation();\r\n    handleClose();\r\n  }\r\n\r\n  //calculate expenses\r\n  const calculateTotalExpense = (data: any[]) => {\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n    data.forEach((element: any) => {\r\n      totalQuantity += element.quantity_bought;\r\n      totalPrice += element.cost;\r\n    })\r\n    return { totalQuantity, totalPrice };\r\n  }\r\n\r\n  //calculate sales\r\n  const calculateTotalSales = (data: any[]) => {\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n    data.forEach((element: any) => {\r\n      totalQuantity += element.quantity;\r\n      totalPrice += element.price;\r\n    })\r\n    return { totalQuantity, totalPrice };\r\n  }\r\n\r\n  //covert date format\r\n  const convertDate = date => {\r\n    date = date.toString();\r\n    let parts = date.split(\" \");\r\n    let months = {\r\n      Jan: \"01\", Feb: \"02\", Mar: \"03\", Apr: \"04\", May: \"05\", Jun: \"06\", Jul: \"07\", Aug: \"08\", Sep: \"09\", Oct: \"10\", Nov: \"11\", Dec: \"12\"\r\n    };\r\n    return parts[3] + \"-\" + months[parts[1]] + \"-\" + parts[2];\r\n  };\r\n\r\n  //set sales headers\r\n  const salesHeaders = [\r\n    { label: 'Bike_Id', key: 'bike_id' },\r\n    { label: 'Payable_Date', key: 'payable_date' },\r\n    { label: 'Email', key: 'email' },\r\n    { label: 'Bike_description', key: 'bike_description' },\r\n    { label: 'Price', key: 'price' },\r\n    { label: 'Quantity', key: 'quantity' },\r\n    { label: 'Size', key: 'size' },\r\n    { label: 'Color', key: 'color' },\r\n    { label: 'Grade', key: 'grade' }\r\n  ];\r\n\r\n  //set expenses headers\r\n  const expensesHeaders = [\r\n    { label: 'Component_Id', key: 'component_id' },\r\n    { label: 'Payable_Date', key: 'payable_date' },\r\n    { label: 'Email', key: 'email' },\r\n    { label: 'Component_Price', key: 'component_price' },\r\n    { label: 'Size', key: 'size' },\r\n    { label: 'Component_Id', key: 'component_type' },\r\n    { label: 'Cost', key: 'cost' },\r\n    { label: 'Quantity', key: 'quantity_bought' },\r\n    { label: 'Specific Component Model', key: 'specificComponentType' },\r\n    { label: 'Location', key: 'location_name' }\r\n  ]\r\n\r\n  //handle date modal open\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (account.role === \"CUSTOMER\" || account.role === \"EMPLOYEE\") {\r\n      setExportMyDataOnly(true);\r\n    }\r\n  };\r\n\r\n  //handle date modal close\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setDatesAreSelected(true);\r\n    setNoneSenseDate(false);\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    setData([]);\r\n    setExportMyDataOnly(false);\r\n    setNoData(false);\r\n  };\r\n\r\n  //handle confirmation modal open\r\n  const handleOpenConfirmation = () => {\r\n    setOpenConfirmation(true);\r\n  };\r\n\r\n  //handle confirmation modal close\r\n  const handleCloseConfirmation = () => {\r\n    setOpenConfirmation(false);\r\n  };\r\n\r\n  //fetching report data\r\n  const generateReport = async () => {\r\n    if ((startDate.toString() !== \"\" && endDate.toString() !== \"\") && (endDate >= startDate)) {\r\n      let data;\r\n      try {\r\n        data = await getdata();\r\n        setData(data);\r\n        handleOpenConfirmation();\r\n      } catch (error) {\r\n        setNoData(true);\r\n        setNoneSenseDate(false);\r\n      }\r\n      return true;\r\n    }\r\n    if (startDate === \"\" || endDate === \"\") {\r\n      setDatesAreSelected(false);\r\n    }\r\n    if (startDate !== \"\" && endDate !== \"\") {\r\n      setDatesAreSelected(true);\r\n    }\r\n    if ((startDate > endDate) && (startDate.toString() !== \"\" && endDate.toString() !== \"\")) {\r\n      setNoneSenseDate(true);\r\n    }\r\n  }\r\n\r\n  //method to create the pdf content\r\n  const createPDF = () => {\r\n    const doc = new jsPDF(\"p\", \"pt\");\r\n\r\n    let header: any;\r\n    let pdfHeaderExpenses = [['Id', 'Date', 'Email', 'Model', 'Type', 'Size', 'Unit Price ($)', 'Quantity', 'Cost ($)']];\r\n    let pdfHeaderSales = [['Id', 'Date', 'Email', 'Description', 'Size', 'Color', 'Grade', 'Quantity', 'Price ($)']];\r\n    let pdfTable: any = [];\r\n\r\n    if (reportType === \"payable\") {\r\n      data.forEach((element: any) => {\r\n        pdfTable.push([[element.component_id], [element.payable_date], [element.email], [element.specificComponentType], [element.component_type], [element.size], [element.component_price], [element.quantity_bought], [element.cost]])\r\n      });\r\n      header = pdfHeaderExpenses;\r\n      doc.text(\"Bike King Expenses Report\", 195, 30);\r\n      doc.addImage(img.src, 'png', 395, 14, 30, 20);\r\n    }\r\n    else if (reportType === \"receivable\") {\r\n      data.forEach((element: any) => {\r\n        pdfTable.push([[element.bike_id], [element.payable_date], [element.email], [element.bike_description], [element.size], [element.color], [element.grade], [element.quantity], [element.price]]);\r\n      });\r\n      header = pdfHeaderSales;\r\n      doc.text(\"Bike King Sales Report\", 220, 30);\r\n      doc.addImage(img.src, 'png', 390, 14, 30, 20);\r\n    }\r\n\r\n    autotable(doc, {\r\n      head: header,\r\n      body: pdfTable,\r\n      styles: { fontSize: 8 },\r\n    });\r\n    doc.save('Report.pdf')\r\n  }\r\n\r\n  const body = (\r\n    <Box className={classes.paper}>\r\n      <CloseIcon className={classes.close} onClick={() => { handleClose() }}></CloseIcon>\r\n      <h2 className={classes.title}>Data Report </h2>\r\n      <Box className={classes.date}>\r\n        <h3>Start Date</h3>\r\n        &ensp;\r\n        <DatePicker className={classes.dateBox} dateFormat='yyyy-MM-dd' selected={startDate} onChange={date => setStartDate(date)}></DatePicker>\r\n      </Box>\r\n      <Box className={classes.date}>\r\n        <h3>End Date</h3>\r\n        &nbsp;\r\n        &ensp;\r\n        <DatePicker className={classes.dateBox} dateFormat='yyyy-MM-dd' selected={endDate} onChange={date => setEndDate(date)}></DatePicker>\r\n      </Box>\r\n      {\r\n        (account.role === \"ADMIN\" || account.role === \"MANAGER\")\r\n        &&\r\n        <Box className={classes.myData}>\r\n          <h3 className={classes.myDataTitle}>Only Export My Transactions</h3>\r\n          <Switch color=\"primary\" onClick={() => { setExportMyDataOnly(!exportMyDataOnly) }}></Switch>\r\n        </Box>\r\n      }\r\n      <Button className={classes.confirmButton} variant=\"contained\" color=\"primary\" onClick={() => { generateReport() }}>Confirm</Button>\r\n      <br />\r\n      {datesAreSelected ? <></> : <Typography className={classes.errorMessage}>*You must select a start date and end date</Typography>}\r\n      {noneSensDate ? <Typography className={classes.errorMessage}>*Start date must be before the end date</Typography> : <></>}\r\n      {noData ? <Typography className={classes.errorMessage}>\"No data available for the selected dates, please select another date interval</Typography> : <></>}\r\n    </Box>\r\n  );\r\n\r\n  const exportConfirmation = (\r\n    <Box className={classes.confirmationModal}>\r\n      <KeyboardReturnIcon className={classes.return} onClick={() => { handleCloseConfirmation() }}></KeyboardReturnIcon>\r\n      <h2 className={classes.title}>Data available, Chose your format </h2>\r\n      <CloseIcon className={classes.close} onClick={() => { downloadReport() }}></CloseIcon>\r\n      <Box className={classes.confirmationButton}>\r\n        <CSVLink\r\n          className={classes.csv}\r\n          data={data}\r\n          headers={reportHeader}\r\n          filename=\"Report.csv\">\r\n          <Button variant=\"contained\" color=\"primary\">CSV</Button></CSVLink>\r\n          &nbsp;\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { createPDF() }}>PDF</Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>Export</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n      <Modal\r\n        open={openConfirmation}\r\n        onClose={handleCloseConfirmation}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {exportConfirmation}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account.account\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DataExport);\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TableRow, Typography, Box } from \"@material-ui/core\";\r\nimport useStyles from \"./PayableHistoryStyle\";\r\nimport DataExport from \"../../components/DataExport/DataExport\";\r\n\r\n/*\r\n  This page pertains to the accounts payable.\r\n  This page is accessible to companies to track their expenses relative to ordering components.\r\n*/\r\nconst PayableHistory = ({ account }: any) => {\r\n\r\n  const classes = useStyles();\r\n  const backend = BACKEND_URL;\r\n  const reportType = \"payable\";\r\n\r\n  const [accountPayables, setAccountPayables] = useState([]);\r\n  const [accountSpecifics, setAccountSpecifics] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${backend}/finance/accountPayables`)\r\n      .then((response) => {\r\n        setAccountPayables(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  }, [backend]);\r\n\r\n  const getAccountSpecifics = (id: number) => {\r\n    axios\r\n      .get(`${backend}/finance/accountPayables/${id}/transactionItem`)\r\n      .then((response) => {\r\n        setAccountSpecifics(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.payableHistory}>\r\n      <h1>Accounts Payable</h1>\r\n      <div className={classes.userDetails}>\r\n        <Typography>{account.firstName + \" \" + account.lastName}</Typography>\r\n        <Typography variant=\"caption\">{account.email}</Typography>\r\n      </div>\r\n      <Paper className={classes.place}>\r\n        <div>\r\n          <Table size=\"small\" className={classes.dataContainer}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className={classes.tableHeader}>Order number</TableCell>\r\n                <TableCell className={classes.tableHeader}>Date</TableCell>\r\n                <TableCell className={classes.tableHeader}>Total</TableCell>\r\n                <TableCell className={classes.tableHeader}>Details</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                Object.keys(accountPayables).length !== 0 && Object.values(accountPayables).map((order: any) => (\r\n                  <TableRow key={order.account_payable_id}>\r\n                    <TableCell className={classes.orderCell}>{order.account_payable_id}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{order.payable_date.substring(0, 10)}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{\"$\" + order.total.toFixed(2)}</TableCell>\r\n                    <TableCell className={classes.orderCell}>\r\n                      <Button color=\"primary\"\r\n                        onClick={() => getAccountSpecifics(order.account_payable_id)}\r\n                      >\r\n                        See More\r\n                    </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n          <Table size=\"small\" className={classes.dataContainer}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell colSpan={7} className={classes.tableHeader}>Order Details</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell className={classes.orderCell}>Transaction ID</TableCell>\r\n                <TableCell className={classes.orderCell}>Type</TableCell>\r\n                <TableCell className={classes.orderCell}>Model</TableCell>\r\n                <TableCell className={classes.orderCell}>Size</TableCell>\r\n                <TableCell className={classes.orderCell}>Unit Price</TableCell>\r\n                <TableCell className={classes.orderCell}>Quantity</TableCell>\r\n                <TableCell className={classes.orderCell}>Cost</TableCell>\r\n              </TableRow>\r\n              {\r\n                accountSpecifics !== {} && Object.values(accountSpecifics).map((item: any) => (\r\n                  <TableRow key={item.transaction_id}>\r\n                    <TableCell className={classes.orderCell}>{item.transaction_id}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{item.component_type}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{item.specificComponentType}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{item.size}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{\"$\" + item.price.toFixed(2)}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{item.quantity_bought}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{\"$\" + item.cost.toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n      <br/>\r\n      <Box className={classes.export}>\r\n        <DataExport reportType={reportType}></DataExport>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account.account\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PayableHistory);","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  receivableHistory: {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    maxWidth: \"70%\",\r\n  },\r\n  userDetails: {\r\n    textAlign: \"right\",\r\n    paddingTop: 0,\r\n    paddingBottom: 20,\r\n    paddingLeft: 0,\r\n    paddingRight: 20\r\n  },\r\n  dataContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  orderCell: {\r\n    border: 1,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderStyle: \"solid\"\r\n  },\r\n  tableHeader: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    padding: \"7px\",\r\n    border: 1,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderStyle: \"solid\",\r\n  },\r\n  export: {\r\n    textAlign:\"right\"\r\n  },\r\n  place: {\r\n    maxHeight: \"50px\",\r\n    maxWeidth: \"50px\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"50px\",\r\n      minHeight: \"500px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"10px\",\r\n      minHeight: \"650px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TableRow, Typography, Box } from \"@material-ui/core\";\r\nimport useStyles from \"./ReceivableHistoryStyle\";\r\nimport DataExport from \"../../components/DataExport/DataExport\";\r\n\r\n/*\r\n  This page pertains to the accounts receivable.\r\n  This page is accessible to users to track their expenses relative to ordering bikes.\r\n*/\r\nconst ReceivableHistory = ({ account }: any) => {\r\n\r\n  const classes = useStyles();\r\n  const backend = BACKEND_URL;\r\n  const reportType = \"receivable\";\r\n\r\n  const [accountReceivables, setAccountReceivables] = useState({});\r\n  const [accountSpecifics, setAccountSpecifics] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${backend}/finance/accountReceivables`)\r\n      .then((response) => {\r\n        setAccountReceivables(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [backend]);\r\n\r\n  const getAccountSpecifics = (id: number) => {\r\n    axios\r\n      .get(`${backend}/finance/accountReceivables/${id}/bikes`)\r\n      .then((response) => {\r\n        setAccountSpecifics(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.data);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.receivableHistory}>\r\n      <h1>Receivable History</h1>\r\n      <div className={classes.userDetails}>\r\n        <Typography>{account.firstName + \" \" + account.lastName}</Typography>\r\n        <Typography variant=\"caption\">{account.email}</Typography>\r\n      </div>\r\n      <Paper className={classes.place}>\r\n        <div>\r\n          <Table size=\"small\" className={classes.dataContainer}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className={classes.tableHeader}>Order number</TableCell>\r\n                <TableCell className={classes.tableHeader}>Date</TableCell>\r\n                <TableCell className={classes.tableHeader}>Total</TableCell>\r\n                <TableCell className={classes.tableHeader}>Details</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                Object.keys(accountReceivables).length !== 0 && Object.values(accountReceivables).map((order: any) => (\r\n                  <TableRow key={order.account_receivable_id}>\r\n                    <TableCell className={classes.orderCell}>{order.account_receivable_id}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{order.payable_date.substring(0, 10)}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{\"$\" + order.total.toFixed(2)}</TableCell>\r\n                    <TableCell className={classes.orderCell}>\r\n                      <Button color=\"primary\"\r\n                        onClick={() => getAccountSpecifics(order.account_receivable_id)}\r\n                      >\r\n                        See More\r\n                    </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n          <Table size=\"small\" className={classes.dataContainer}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell colSpan={5} className={classes.tableHeader}>Order Details</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell className={classes.orderCell}>ID</TableCell>\r\n                <TableCell className={classes.orderCell}>Description</TableCell>\r\n                <TableCell className={classes.orderCell}>Unit Price</TableCell>\r\n                <TableCell className={classes.orderCell}>Quantity</TableCell>\r\n                <TableCell className={classes.orderCell}>Cost</TableCell>\r\n              </TableRow>\r\n              {\r\n                accountSpecifics !== {} && Object.values(accountSpecifics).map((item: any) => (\r\n                  <TableRow key={item.bike_id}>\r\n                    <TableCell className={classes.orderCell}>{item.bike_id}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{item.bike_description}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{\"$\" + item.price.toFixed(2)}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{item.quantity}</TableCell>\r\n                    <TableCell className={classes.orderCell}>{\"$\" + (item.price* item.quantity).toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n      <br/>\r\n      <Box className={classes.export}>\r\n        <DataExport reportType={reportType}></DataExport>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account.account\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReceivableHistory);","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridList: {\r\n        display:\"block\",\r\n        margin:\"auto\",\r\n        width:\"100%\"\r\n    },\r\n\r\n    grid:{\r\n        display:\"grid\",\r\n        placeItems:\"center\",\r\n    },\r\n    componentName:{\r\n        fontSize:\"25px\",\r\n        fontWeight:\"bold\"\r\n    },\r\n    addCart:{\r\n        margin:\"30px\"\r\n    },\r\n    title: {\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"200%\",\r\n        marginBottom:\"25px\"\r\n      },\r\n})\r\n);\r\n\r\nexport default useStyles;","const ColorBox = ({ color }) => {\r\n    return (\r\n        <div style={{ background: color, width: \"50px\", height: \"50px\" }}></div>\r\n    )\r\n}\r\n\r\nexport default ColorBox","export const ADD_BIKE: string = \"ADD_BIKE\"\r\nexport const REMOVE_BIKE:string = \"REMOVE_BIKE\"\r\nexport const REMOVE_ALL_BIKES:string = \"REMOVE_ALL_BIKES\"\r\n\r\nexport const ADD_COMPONENT: string = \"ADD_COMPONENT\"\r\nexport const REMOVE_COMPONENT:string = \"REMOVE_COMPONENT\"\r\nexport const REMOVE_ALL_COMPONENTS:string = \"REMOVE_ALL_COMPONENTS\"","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    billingContainer:{\r\n        background:\"#F7F7F7\",\r\n        height:\"90vh\",\r\n        marginRight:\"40px\",\r\n        marginLeft:\"40px\",\r\n        overflow:\"scroll\",\r\n        minWidth:\"400px\"\r\n    },\r\n    title:{\r\n        textAlign:\"left\",\r\n        borderBottom:\"solid 1px black\",\r\n        width:\"40%\",\r\n        marginLeft:\"40px\",\r\n        marginBottom:\"20px\",\r\n        paddingTop:\"20px\",\r\n    },\r\n    itemRow:{\r\n        margin:\"15px\"\r\n    },\r\n    item:{\r\n        textAlign:\"center\"\r\n    },\r\n    header:{\r\n        textAlign:\"center\",\r\n        background:\"#C4C4C4\",\r\n        minWidth:\"20px\"\r\n    },\r\n    headerRow:{\r\n        background:\"#C4C4C4\"\r\n    }\r\n})\r\n);\r\n\r\nexport default useStyles;","import { Button, Grid, Typography } from \"@material-ui/core\"\r\nimport { RemoveCircleOutline } from \"@material-ui/icons\"\r\nimport { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BACKEND_URL } from \"../../core/utils/config\"\r\nimport { BikeSold, removeAllBikes, removeAllComponents, removeBike, removeComponentSold } from \"../../redux/actions/OrderBikeActions/orderBikeActions\"\r\nimport useStyles from \"./BikeOrderSummaryStyle\"\r\nimport axios from \"axios\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst BikeOrderSummary = ({ bikeOrderList, removeBike, removeAllBikes, removeAllComponents, removeComponentSold }) => {\r\n    const classes = useStyles()\r\n    const url = BACKEND_URL\r\n    const [total, setTotal] = useState(0)\r\n\r\n    useEffect(() => {\r\n        let cartTotal = 0\r\n        for (let i = 0; i < bikeOrderList.bikeOrderList.length; i++) {\r\n            cartTotal = cartTotal + bikeOrderList.bikeOrderList[i].price * bikeOrderList.bikeOrderList[i].quantity\r\n            if (bikeOrderList.bikeOrderList.length - 1 === i) {\r\n                setTotal(cartTotal)\r\n            }\r\n        }\r\n    }, [bikeOrderList.bikeOrderList])\r\n\r\n    const removeBikeOrderFromCart = (bikeSold: BikeSold) => {\r\n        removeComponentSold(bikeSold.drive_train_id);\r\n        removeComponentSold(bikeSold.frame_id);\r\n        removeComponentSold(bikeSold.handle_id);\r\n        removeComponentSold(bikeSold.seat_id);\r\n        removeComponentSold(bikeSold.wheel_id);\r\n        removeBike(bikeSold);\r\n    }\r\n\r\n    const clearCart = () => {\r\n        removeAllComponents();\r\n        removeAllBikes();\r\n    }\r\n\r\n    const proceedToSell = () => {\r\n        if (bikeOrderList.bikeOrderList.length > 0) {\r\n            axios.post(`${url}/bike/createBikes`, {\r\n                bikeOrderList: bikeOrderList\r\n            })\r\n            axios.put(`${url}/components/sellComponents`, {\r\n                componentSaleList: bikeOrderList.componentOrderList\r\n            })\r\n            clearCart();\r\n        }\r\n    }\r\n\r\n    const ItemRow = ({ bike }) => {\r\n        return (\r\n            <Grid item container xs={12} className={classes.itemRow} alignItems=\"center\">\r\n                <Grid item xs={1}>\r\n                    <Button onClick={() => { removeBikeOrderFromCart(bike) }}>\r\n                        <RemoveCircleOutline />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography className={classes.item}>{bike.description}</Typography>\r\n                </Grid>\r\n                <Grid item xs={3} container alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <Typography className={classes.item}>{bike.quantity}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography className={classes.item}>$ {bike.price}</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography className={classes.item}>$ {bike.price * bike.quantity}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.billingContainer}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" className={classes.title}>Billing</Typography>\r\n                </Grid>\r\n                <Grid item container xs={12} className={classes.headerRow}>\r\n                    <Grid item className={classes.header} xs={1}></Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography className={classes.header} variant=\"h6\">Description</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.header} variant=\"h6\">Quantity</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.header} variant=\"h6\">Unit Price</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.header} variant=\"h6\">Total</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {\r\n                    bikeOrderList.bikeOrderList.map((bike) => (\r\n                        <ItemRow key={bike.description} bike={bike}></ItemRow>\r\n                    ))\r\n                }\r\n\r\n\r\n            </Grid>\r\n            {\r\n                bikeOrderList.bikeOrderList.length !== 0 &&\r\n                <>\r\n                    <Typography variant=\"h6\">Total: ${total}</Typography>\r\n                    <Button onClick={proceedToSell} variant=\"contained\">Buy</Button>\r\n                    <Button variant=\"contained\" onClick={removeAllComponents}>Clear Cart</Button>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        bikeOrderList: state.bikeOrderList,\r\n        componentOrderList: state.componentOrderList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        removeBike: (bikeSold: BikeSold) => dispatch(removeBike(bikeSold)),\r\n        removeAllBikes: () => dispatch(removeAllBikes()),\r\n        removeComponentSold: (id: number) => dispatch(removeComponentSold(id)),\r\n        removeAllComponents: () => dispatch(removeAllComponents())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BikeOrderSummary)\r\n","import {\r\n  ADD_BIKE,\r\n  REMOVE_BIKE,\r\n  REMOVE_ALL_BIKES,\r\n  ADD_COMPONENT,\r\n  REMOVE_COMPONENT,\r\n  REMOVE_ALL_COMPONENTS\r\n} from '../../types/OrderBikeTypes/orderBikeTypes';\r\n\r\nexport interface BikeSold {\r\n  price: number,\r\n  size: string,\r\n  color: string,\r\n  description: string,\r\n  grade: string,\r\n  quantity: number,\r\n  handle_id: number,\r\n  wheel_id: number,\r\n  frame_id: number,\r\n  seat_id:number,\r\n  drive_train_id: number\r\n}\r\n\r\nexport interface ComponentUpdated {\r\n  id: number,\r\n  quantity: number\r\n}\r\n\r\nexport const addBike = (bikeSold: BikeSold) => {\r\n  return {\r\n    type: ADD_BIKE,\r\n    payload: bikeSold,\r\n  }\r\n}\r\n\r\nexport const addComponentSold = (componentUpdated: ComponentUpdated) => {\r\n  return {\r\n    type: ADD_COMPONENT,\r\n    payload: componentUpdated\r\n}\r\n}\r\n\r\nexport const removeBike = (bikeSold: BikeSold) => {\r\n  return {\r\n    type: REMOVE_BIKE,\r\n    payload: bikeSold\r\n  }\r\n}\r\n\r\nexport const removeComponentSold = (id: number) => {\r\n  return {\r\n    type: REMOVE_COMPONENT,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const removeAllBikes = () => {\r\n  return {\r\n    type: REMOVE_ALL_BIKES\r\n  }\r\n}\r\n\r\nexport const removeAllComponents = () => {\r\n  return {\r\n    type: REMOVE_ALL_COMPONENTS\r\n  }\r\n}","import { BACKEND_URL } from \"../../core/utils/config\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Grid, Typography, Select, MenuItem, GridListTile, GridList, Button, Snackbar, TextField } from \"@material-ui/core\"\r\nimport { ToggleButton, ToggleButtonGroup, Alert, AlertTitle } from \"@material-ui/lab\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport useStyles from \"./OrderBikeStyle\"\r\nimport ColorBox from \"../../components/ColorBox/ColorBox\"\r\nimport { addBike, addComponentSold, BikeSold, ComponentUpdated } from \"../../redux/actions/OrderBikeActions/orderBikeActions\"\r\nimport { connect } from \"react-redux\"\r\nimport BikeOrderSummary from \"../../components/BikeOrderSummary/BikeOrderSummary\"\r\nconst OrderBike = ({ bikeOrderList, addBike, addComponentSold }) => {\r\n\r\n    const URL = BACKEND_URL\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false);\r\n    const [snackMessage, setSnackMessage] = useState(\"\");\r\n    const handleClose = () => {\r\n        setSnackOpen(false);\r\n    };\r\n\r\n    const [selectSize, setSelectSize] = useState<string | null>('')\r\n    const handleSelectSize = (event: React.MouseEvent<HTMLElement>, selectedSize: string | null) => {\r\n        setSelectSize(selectedSize)\r\n    }\r\n\r\n    const [location, setLocation] = useState<string>(\"\")\r\n    const handleSelectLocation = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setLocation(event.target.value as string)\r\n    }\r\n\r\n    const [locationList, setLocationList] = useState([])\r\n    const [componentList, setComponentList] = useState<any>(undefined)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${URL}/components/locations/all`,\r\n        ).then((response) => {\r\n            setLocationList(response.data)\r\n        }).catch(error => {\r\n            //handle error\r\n            console.log(error)\r\n        })\r\n    }, [URL, bikeOrderList])\r\n\r\n    const classes = useStyles()\r\n\r\n    const [frame, setFrame] = useState(undefined)\r\n    const [saddle, setSaddle] = useState(undefined)\r\n    const [handle, setHandle] = useState(undefined)\r\n    const [wheel, setWheel] = useState(undefined)\r\n    const [driveTrain, setDriveTrain] = useState(undefined)\r\n\r\n    const [color, setColor] = useState<string>('')\r\n    const handleSelectColor = (event: React.MouseEvent<HTMLElement>, color: string) => {\r\n        setColor(color)\r\n    }\r\n\r\n    const [finish, setFinish] = useState<string>('')\r\n    const handleSelectFinish = (event: React.MouseEvent<HTMLElement>, finish: string) => {\r\n        setFinish(finish)\r\n    }\r\n\r\n    const [grade, setGrade] = useState<string>('')\r\n    const handleSelectGrade = (event: React.MouseEvent<HTMLElement>, grade: string) => {\r\n        setGrade(grade)\r\n    }\r\n\r\n    const [bikeQuantity, setQuantity] = useState(1)\r\n    const handleTypeBikeQuantity = (event) => {\r\n        event.preventDefault()\r\n        const quantity = event.target.value\r\n        if (quantity === \"\") {\r\n            setQuantity(quantity)\r\n        }\r\n        else if (quantity < 1) {\r\n            return\r\n        }\r\n        else {\r\n            setQuantity(Math.round(quantity))\r\n        }\r\n    }\r\n    const getComponentType = (componentType) => {\r\n        switch (componentType) {\r\n            case \"Frame Type\":\r\n                return frame\r\n            case \"Saddle Type\":\r\n                return saddle\r\n            case \"Handle Type\":\r\n                return handle\r\n            case \"Wheel Type\":\r\n                return wheel\r\n            case \"Drive Train Type\":\r\n                return driveTrain\r\n        }\r\n    }\r\n\r\n    const handleSetComponent = (event: React.MouseEvent<HTMLElement>, componentId, componentType) => {\r\n        switch (componentType) {\r\n            case \"Frame Type\":\r\n                setFrame(componentId)\r\n                break;\r\n            case \"Saddle Type\":\r\n                setSaddle(componentId)\r\n                break;\r\n            case \"Handle Type\":\r\n                setHandle(componentId)\r\n                break;\r\n            case \"Wheel Type\":\r\n                setWheel(componentId)\r\n                break;\r\n            case \"Drive Train Type\":\r\n                setDriveTrain(componentId)\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getComponentBySizeAndLocation = () => {\r\n            if (selectSize && location) {\r\n                axios.get(`${URL}/components/componentTypes`,\r\n                    {\r\n                        params: {\r\n                            location: location,\r\n                            size: selectSize\r\n                        }\r\n                    }).then(response => {\r\n                        setComponentList(response.data)\r\n                    }).catch(error => {\r\n                        //handle error after\r\n                        console.log(error)\r\n                    })\r\n            }\r\n        }\r\n\r\n        getComponentBySizeAndLocation()\r\n    }, [selectSize, location, URL])\r\n\r\n    const StyledToggleButtonGroup = withStyles((theme) => ({\r\n        grouped: {\r\n            margin: theme.spacing(0.5),\r\n            border: 'none',\r\n            '&:not(:first-child)': {\r\n                borderRadius: theme.shape.borderRadius,\r\n            },\r\n            '&:first-child': {\r\n                borderRadius: theme.shape.borderRadius,\r\n            },\r\n        },\r\n    }))(ToggleButtonGroup);\r\n\r\n    const handleAddToCart = async () => {\r\n        const temp: any[] = [frame, saddle, handle, wheel, driveTrain]\r\n        let pass = true\r\n        if (Number(bikeQuantity) === 0) {\r\n            setSnackMessage(\"Please input a quantity\")\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        if (frame && saddle && handle && wheel && driveTrain && color && finish && grade && bikeQuantity > 0) {\r\n            for (let i = 0; i < 5; i++) {\r\n                const response = await axios.get(`${URL}/components/${temp[i]}`)\r\n                const retrievedComponent = response.data[0]\r\n                if (retrievedComponent.quantity <= 0 || bikeQuantity > retrievedComponent.quantity) {\r\n                    setSnackMessage(\"There are not enough parts in the inventory\")\r\n                    setSnackOpen(true)\r\n                    pass = false\r\n                    break;\r\n                }\r\n                temp[i] = retrievedComponent\r\n            }\r\n\r\n            if (pass) {\r\n                temp.forEach((component): any => {\r\n                    addComponentSold({ id: component.component_id, quantity: component.quantity - bikeQuantity })\r\n                })\r\n\r\n                addBike({\r\n                    price: temp[0].price + temp[1].price + temp[2].price + temp[3].price + temp[4].price,\r\n                    size: selectSize,\r\n                    color: color,\r\n                    description: `${selectSize} ${color} ${temp[0].component_type} ${temp[0].specificComponentType} ${temp[1].component_type} ${temp[1].specificComponentType} ${temp[2].component_type} ${temp[2].specificComponentType} ${temp[3].component_type} ${temp[3].specificComponentType} ${temp[4].component_type} ${temp[4].specificComponentType}`,\r\n                    grade: grade,\r\n                    quantity: bikeQuantity,\r\n                    frame_id: temp[0].component_id,\r\n                    saddle_id: temp[1].component_id,\r\n                    handle_id: temp[2].component_id,\r\n                    wheel_id: temp[3].component_id,\r\n                    drive_train_id: temp[4].component_id\r\n                })\r\n            }\r\n        } else {\r\n            setSnackMessage(\"Please select all the options\")\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n    }\r\n    const ComponentRow = ({ componentType, componentList }) => {\r\n\r\n        return (\r\n            <Grid container alignItems=\"center\">    \r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"h5\">{componentType}</Typography>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <GridList className={classes.gridList}>\r\n                        <StyledToggleButtonGroup exclusive value={getComponentType(componentType)} onChange={(e, component_id) => { handleSetComponent(e, component_id, componentType) }}>\r\n                            {\r\n                                componentList.map((component): any => (\r\n                                    <ToggleButton value={component.component_id} key={component.component_id}>\r\n                                        <GridListTile>\r\n                                            <Typography className={classes.componentName}>{component.specificComponentType}</Typography>\r\n                                            <Typography>Price: ${component.price}</Typography>\r\n                                            <Typography>Quantity: {component.quantity}</Typography>\r\n                                        </GridListTile>\r\n                                    </ToggleButton>\r\n                                ))\r\n                            }\r\n                        </StyledToggleButtonGroup>\r\n                    </GridList>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const finishArray = [\"Matte\", \"Chrome\"]\r\n    const colorArray = [\"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"grey\", \"black\", \"white\"]\r\n    const gradeArray = [\"Aluminium\", \"Steel\", \"Carbon\"]\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h2\" className={classes.title}>\r\n                            Order Bike\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={7}>\r\n                    <Grid item xs={12} container style={{ marginBottom: \"25px\" }}>\r\n                        <Grid item xs={3}>\r\n                            <Typography variant=\"h5\">Location</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Select name=\"inventoryLocation\" defaultValue={\"\"} onChange={(e: any) => { handleSelectLocation(e); }}>\r\n                                {\r\n                                    locationList.map((location: any) => <MenuItem key={location.location_name} value={location.location_name}>{location.location_name}</MenuItem>)\r\n                                }\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Frame Size */}\r\n                    <Grid item container xs={12} alignItems=\"center\" style={{ marginBottom: \"20px\" }}>\r\n                        <Grid item xs={3} >\r\n                            <Typography variant=\"h5\">Frame Size</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <StyledToggleButtonGroup\r\n                                value={selectSize}\r\n                                exclusive\r\n                                onChange={(e: any, selectSize: string) => { handleSelectSize(e, selectSize); }}\r\n                            >\r\n                                <ToggleButton value=\"SMALL\">Small</ToggleButton>\r\n                                <ToggleButton value=\"MEDIUM\" >Medium</ToggleButton>\r\n                                <ToggleButton value=\"LARGE\" >Large</ToggleButton>\r\n                            </StyledToggleButtonGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {\r\n                        componentList &&\r\n                        <>\r\n                            <ComponentRow componentList={componentList.FRAME} componentType={\"Frame Type\"}></ComponentRow>\r\n                            <Grid item container xs={12} alignItems=\"center\">\r\n                                <Grid item xs={3}>\r\n                                    <Typography variant=\"h5\">Color</Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={9}>\r\n                                    <GridList className={classes.gridList}>\r\n                                        <StyledToggleButtonGroup exclusive value={color} onChange={handleSelectColor}>\r\n                                            {\r\n                                                colorArray.map((color) => (\r\n                                                    <ToggleButton key={color} value={color}>\r\n                                                        <ColorBox color={color}></ColorBox>\r\n                                                    </ToggleButton>\r\n                                                ))\r\n                                            }\r\n                                        </StyledToggleButtonGroup>\r\n                                    </GridList>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item container xs={12} alignItems=\"center\">\r\n                                <Grid item xs={3}>\r\n                                    <Typography variant=\"h5\">Finish</Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={9}>\r\n                                    <GridList className={classes.gridList}>\r\n                                        <StyledToggleButtonGroup exclusive value={finish} onChange={handleSelectFinish}>\r\n                                            {\r\n                                                finishArray.map((finish) => (\r\n                                                    <ToggleButton key={finish} value={finish}>\r\n                                                        <Typography className={classes.componentName}>{finish}</Typography>\r\n                                                    </ToggleButton>\r\n                                                ))\r\n                                            }\r\n                                        </StyledToggleButtonGroup>\r\n                                    </GridList>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item container xs={12} alignItems=\"center\">\r\n                                <Grid item xs={3}>\r\n                                    <Typography variant=\"h5\">Grade</Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={9}>\r\n                                    <GridList className={classes.gridList}>\r\n                                        <StyledToggleButtonGroup exclusive value={grade} onChange={handleSelectGrade}>\r\n                                            {\r\n                                                gradeArray.map((grade) => (\r\n                                                    <ToggleButton key={grade} value={grade}>\r\n                                                        <Typography className={classes.componentName}>{grade}</Typography>\r\n                                                    </ToggleButton>\r\n                                                ))\r\n                                            }\r\n                                        </StyledToggleButtonGroup>\r\n                                    </GridList>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <ComponentRow componentList={componentList.SEAT} componentType={\"Saddle Type\"}></ComponentRow>\r\n                            <ComponentRow componentList={componentList.HANDLE} componentType={\"Handle Type\"}></ComponentRow>\r\n                            <ComponentRow componentList={componentList.WHEEL} componentType={\"Wheel Type\"}></ComponentRow>\r\n                            <ComponentRow componentList={componentList.DRIVE_TRAIN} componentType={\"Drive Train Type\"}></ComponentRow>\r\n                            <Grid item xs={12}>\r\n                                <TextField type=\"number\" InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                    style={{ marginTop: \"20px\" }}\r\n                                    variant=\"outlined\" defaultValue={''} value={bikeQuantity} InputProps={{ inputProps: { min: 0, pattern: \"[0-9]*\" } }} onChange={handleTypeBikeQuantity}>\r\n\r\n\r\n                                </TextField>\r\n                                <Button className={classes.addCart} onClick={handleAddToCart}>Add To Cart</Button>\r\n                                <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={snackOpen}\r\n                                    autoHideDuration={6000}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <Alert severity=\"error\" onClose={handleClose}>\r\n                                        <AlertTitle>Error</AlertTitle>\r\n                                        {snackMessage}\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </Grid>\r\n                        </>\r\n\r\n                    }\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <BikeOrderSummary></BikeOrderSummary>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        bikeOrderList: state.bikeOrderList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addBike: (bikeSold: BikeSold) => dispatch(addBike(bikeSold)),\r\n        addComponentSold: (componentUpdated: ComponentUpdated) => dispatch(addComponentSold(componentUpdated))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderBike)\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"200%\",\r\n    marginTop: \"250px\",\r\n  },\r\n  form: {\r\n      marginTop: \"25px\"\r\n  },\r\n  textfield: {\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  price: {\r\n    width: \"60%\",\r\n    height: \"40px\",\r\n    marginBottom: \"10px\",\r\n    fontSize: \"16px\",\r\n    background: \"rgb(221, 221, 221)\",\r\n  },\r\n  drop: {\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  btn: {\r\n      color: \"primary\",\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Button, Dialog, DialogTitle, DialogActions, TextField, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n// SERVICES\r\nimport { BACKEND_URL } from \"../../core/utils/config\";\r\n\r\n// STYLING\r\nimport useStyles from \"./CustomComponentStyle\";\r\n\r\n//interface for the data\r\ninterface CustomComponentData {\r\n    price: string,\r\n    quantity: string,\r\n    component_type: string,\r\n    component_status: string,\r\n    size: string,\r\n    specificComponentType: string,\r\n    location_name: string\r\n}\r\n\r\n/*\r\n  This is the custom component page. Users can add their own custom components that can be bought.\r\n*/\r\nconst CustomComponent = () => {\r\n    const url = BACKEND_URL;\r\n    const [customComponentErrorMessage, setCustomComponentErrorMessage] = useState(\"\");\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const [inputs, setInputs] = useState({\r\n        location: \"\",\r\n        price: \"\",\r\n        size: \"SMALL\",\r\n        component_type: \"HANDLE\",\r\n        specificComponentType: \"\"\r\n    });\r\n\r\n    const handleInput = (e: any) => {\r\n        const value = e.target.value;\r\n        setInputs({\r\n            ...inputs,\r\n            [e.target.name]: value\r\n        })\r\n    };\r\n\r\n    function clearPage() {\r\n        setCustomComponentErrorMessage(\"\");\r\n        setInputs({\r\n            location: \"\",\r\n            price: \"\",\r\n            size: \"SMALL\",\r\n            component_type: \"HANDLE\",\r\n            specificComponentType: \"\"\r\n        });\r\n    }\r\n\r\n    //handle submit\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        const customComponentData: CustomComponentData = {\r\n            price: inputs.price,\r\n            quantity: \"0\",\r\n            component_type: inputs.component_type,\r\n            component_status: \"UNAVAILABLE\",\r\n            size: inputs.size,\r\n            specificComponentType: inputs.specificComponentType,\r\n            location_name: inputs.location,\r\n        };\r\n\r\n        axios\r\n            .post(`${url}/components/addComponent`, customComponentData)\r\n            .then((response) => {\r\n                clearPage();\r\n                setDialogOpen(true);\r\n            })\r\n            .catch((error) => {\r\n                setCustomComponentErrorMessage(error.response.data.message);\r\n            });\r\n    }\r\n\r\n    //validate the form\r\n    const isFormValid = () => {\r\n        const { location, price, size, component_type, specificComponentType } = inputs;\r\n        return (location.length > 0 && price.length > 0 && size.length > 0 && component_type.length > 0 && specificComponentType.length > 0);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={classes.title}>\r\n                    Add Component\r\n                </div>\r\n                <div className={classes.form}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <TextField label=\"Location\" type=\"text\" name=\"location\" value={inputs.location} onChange={handleInput} className={classes.textfield} />\r\n                        </div>\r\n                        <div>\r\n                            <FormControl className={classes.drop}>\r\n                                <InputLabel>\r\n                                    Component Type:\r\n                            </InputLabel>\r\n                                <Select value={inputs.size} name=\"size\" onChange={handleInput}>\r\n                                    <MenuItem value=\"SMALL\"> Small </MenuItem>\r\n                                    <MenuItem value=\"MEDIUM\"> Medium </MenuItem>\r\n                                    <MenuItem value=\"LARGE\"> Large </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div>\r\n                            <input placeholder=\"Price\" name=\"price\" value={inputs.price} onChange={handleInput} pattern=\"^\\d*(\\.\\d{0,2})?$\" title=\"Enter a positive number with AT MOST 2 decimal numbers.\" className={classes.price} />\r\n                        </div>\r\n                        <div>\r\n                            <FormControl className={classes.drop}>\r\n                                <InputLabel>\r\n                                    Component Type:\r\n                            </InputLabel>\r\n                                <Select value={inputs.component_type} name=\"component_type\" onChange={handleInput} >\r\n                                    <MenuItem value=\"HANDLE\"> Handle </MenuItem>\r\n                                    <MenuItem value=\"WHEEL\"> Wheel </MenuItem>\r\n                                    <MenuItem value=\"SEAT\"> Seat </MenuItem>\r\n                                    <MenuItem value=\"DRIVE_TRAIN\"> Drive Train </MenuItem>\r\n                                    <MenuItem value=\"FRAME\"> Frame </MenuItem>\r\n                                </Select>\r\n\r\n                            </FormControl>\r\n                        </div>\r\n                        <div>\r\n                            <TextField label=\"Specific Component Type\" type=\"text\" value={inputs.specificComponentType} name=\"specificComponentType\" onChange={handleInput} className={classes.textfield} />\r\n                        </div>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!isFormValid()}>Submit</Button>\r\n                    </form>\r\n                </div>\r\n                {\r\n                    customComponentErrorMessage\r\n                        ?\r\n                        <Typography>\r\n                            {customComponentErrorMessage}\r\n                        </Typography>\r\n                        : <></>\r\n                }\r\n            </div >\r\n            <Dialog open={dialogOpen} onClose={handleDialogClose}>\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Component added successfully.\"}\r\n                </DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"primary\">\r\n                        <CheckIcon />\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        bikeOrderList: state.bikeOrderList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CustomComponent);\r\n","// DEPENDENCIES\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\n// SERVICES\r\nimport localStorageService from \"../core/services/LocalStorageService\";\r\nimport { isAuthenticated } from \"../redux/actions/AccountActions/accountAction\";\r\n\r\n// COMPONENTS\r\nimport Login from \"../pages/Login/Login\";\r\nimport Registration from \"../pages/Registration/Registration\";\r\nimport Home from \"../pages/Home/Home\";\r\nimport HeaderMenu from \"../components/Menu/Header/Header\";\r\nimport SideBarMenu from \"../components/Menu/SideBarMenu/SideBarMenu\";\r\nimport IdleTimerContainer from \"../components/IdleTimerContainer/IdleTimerContainer\";\r\nimport PermissionManagement from \"../pages/PermissionManagement/PermissionManagement\";\r\nimport Inventory from \"../pages/Inventory/Inventory\";\r\nimport OrderComponent from \"../pages/OrderComponent/OrderComponent\";\r\nimport UserLogs from \"../pages/UserLogs/UserLogs\";\r\nimport PayableHistory from \"../pages/PaymentHistory/PayableHistory\";\r\nimport ReceivableHistory from \"../pages/PaymentHistory/ReceivableHistory\";\r\nimport OrderBike from \"../pages/OrderBike/OrderBike\"\r\nimport CustomComponent from \"../pages/CustomComponent/CustomComponent\";\r\n\r\n// STYLING\r\nimport { Box } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n  \r\nconst App = ({ account, isAuthenticated }: any) => {\r\n\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorageService.getAccessToken()) {\r\n      localStorageService.setBearerToken();\r\n    }\r\n    isAuthenticated();  \r\n  }, [account.authenticated, isAuthenticated, account.loading]);\r\n\r\n  axios.interceptors.response.use(\r\n    (response) => {\r\n      return response; // no need to refresh token if successful\r\n    },\r\n    (error) => {\r\n      if (error.response.data.message === \"invalid_token\") {\r\n        const request = error.config;\r\n        delete axios.defaults.headers.common.Authorization;\r\n        delete request.headers.Authorization;\r\n        localStorage.removeItem(\"access_token\");\r\n      } else {\r\n        return Promise.reject(error); // error from backend, but not because of invalid token\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <Box>\r\n        <Box className=\"App\">\r\n          <Box>\r\n            {account.authenticated && <HeaderMenu setMenuIsOpen={setMenuIsOpen} menuIsOpen={menuIsOpen} />}\r\n            {menuIsOpen && <SideBarMenu />}\r\n          </Box>\r\n          <IdleTimerContainer />\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => account.authenticated ? <Home /> : <Redirect to=\"/login\" />} />\r\n            <Route path=\"/login\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  ? <Redirect to=\"/\" />\r\n                  : <Login />\r\n              }\r\n            />\r\n            <Route path=\"/register\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  ? <Redirect to=\"/\" />\r\n                  : <Registration />\r\n              }\r\n            />\r\n            <Route path=\"/admin\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated && account.account.role === \"ADMIN\"\r\n                  ? <PermissionManagement />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route path=\"/order\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  && (account.account.role === \"ADMIN\"\r\n                    || account.account.role === \"MANAGER\"\r\n                    || account.account.role === \"EMPLOYEE\")\r\n                  ? <OrderComponent />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route path=\"/inventory\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  && (account.account.role === \"ADMIN\"\r\n                    || account.account.role === \"MANAGER\"\r\n                    || account.account.role === \"EMPLOYEE\")\r\n                  ? <Inventory />\r\n                  : <Redirect to=\"login\" />\r\n              }\r\n            />\r\n            <Route path=\"/orderbike\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  ? <OrderBike />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route path=\"/userlogs\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated && account.account.role === \"ADMIN\"\r\n                  ? <UserLogs />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route path=\"/accountPayable\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  ? <PayableHistory />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route path=\"/accountReceivable\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  ? <ReceivableHistory />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route path=\"/addComponent\"\r\n              render={() => account.loading\r\n                ? <></>\r\n                : account.authenticated\r\n                  && (account.account.role === \"ADMIN\"\r\n                    || account.account.role === \"MANAGER\")\r\n                  ? <CustomComponent />\r\n                  : <Redirect to=\"/login\" />\r\n              }\r\n            />\r\n            <Route exact path=\"*\" render={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        </Box>\r\n      </Box>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    isAuthenticated: () => dispatch(isAuthenticated()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Create theme instance for material UI. This is instantiated once only\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#000000\",\r\n        },\r\n        secondary: {\r\n            main: \"#ffffff\",\r\n        },\r\n    }\r\n});\r\n\r\nexport default theme;\r\n","import {\r\n  IS_AUTHENTICATED_SUCCESS,\r\n  IS_AUTHENTICATED_FAILURE,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"../../types/AccountTypes/accountTypes\";\r\n\r\n// Reducer for account, it handles the setting of states\r\nconst initialState = {\r\n  loading: true,\r\n  authenticated: false,\r\n  error: \"\",\r\n  account: undefined\r\n};\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        authenticated: action.authenticated,\r\n        account: action.payload\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n        authenticated: action.authenticated,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        loading: false,\r\n        authenticated: action.authenticated,\r\n      };\r\n    case IS_AUTHENTICATED_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        authenticated: action.authenticated,\r\n        account: action.payload\r\n      };\r\n    case IS_AUTHENTICATED_FAILURE:\r\n      return {\r\n        loading: false,\r\n        authenticated: action.authenticated\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  ADD_ITEM,\r\n  UPDATE_QUANTITY,\r\n  REMOVE_ALL_ITEMS,\r\n  REMOVE_ITEM\r\n} from \"../../types/OrderListTypes/orderListTypes\";\r\n\r\nconst initialState = {\r\n    error: \"\",\r\n    orderList: []\r\n}\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        orderList: [...state.orderList, action.payload]\r\n      };\r\n\r\n    case REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        orderList: action.payload\r\n      };\r\n    case REMOVE_ALL_ITEMS:\r\n      return {\r\n        error: \"\",\r\n        orderList: []\r\n      };\r\n    case UPDATE_QUANTITY:\r\n      return{\r\n        ...state,\r\n        orderList: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  ADD_BIKE,\r\n  REMOVE_BIKE,\r\n  REMOVE_ALL_BIKES,\r\n  ADD_COMPONENT,\r\n  REMOVE_COMPONENT,\r\n  REMOVE_ALL_COMPONENTS\r\n} from '../../types/OrderBikeTypes/orderBikeTypes';\r\n\r\nimport { BikeSold, ComponentUpdated } from \"../../actions/OrderBikeActions/orderBikeActions\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  bikeOrderList: [],\r\n  componentOrderList: []\r\n}\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ADD_BIKE:\r\n      return {\r\n        ...state,\r\n        bikeOrderList: [...state.bikeOrderList, action.payload]\r\n      };\r\n    case REMOVE_BIKE:\r\n      return {\r\n        ...state,\r\n        bikeOrderList: state.bikeOrderList.filter((bikeSold : BikeSold) => bikeSold !== action.payload)\r\n      };\r\n    case REMOVE_ALL_BIKES:\r\n      return {\r\n        error:\"\",\r\n        bikeOrderList: [],\r\n        componentOrderList: [...state.componentOrderList]\r\n      };\r\n    case ADD_COMPONENT:\r\n      return {\r\n        ...state,\r\n        componentOrderList: [...state.componentOrderList, action.payload]\r\n      };\r\n    case REMOVE_COMPONENT:\r\n      return {\r\n        ...state,\r\n        componentOrderList: state.componentOrderList.filter((comp: ComponentUpdated) => comp.id !== action.payload)\r\n      };\r\n    case REMOVE_ALL_COMPONENTS:\r\n      return {\r\n        error:\"\",\r\n        bikeOrderList: [],\r\n        componentOrderList: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport accountReducer from \"./reducers/AccountReducers/accountReducer\";\r\nimport orderListReducer from \"./reducers/OrderListReducers/orderListReducer\";\r\nimport orderBikeReducer from \"./reducers/OrderBikeReducer/orderBikeReducer\";\r\n\r\n// The root reducer is the main reducer of our redux store. Put all reducers here.\r\nconst rootReducer = combineReducers({\r\n  account: accountReducer,\r\n  orderList: orderListReducer,\r\n  bikeOrderList: orderBikeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n// Create store and apply thunk for API request\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// DEPENDENCIES\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// SERVICES + COMPONENTS\r\nimport App from \"./app/App\";\r\nimport theme from \"./core/utils/theme\";\r\nimport store from \"./redux/store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n// STYLING\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}